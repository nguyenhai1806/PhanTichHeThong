#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DTO
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="QLHOCSINH")]
	public partial class QL_THPTDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertCTPhieuBienNhanH(CTPhieuBienNhanH instance);
    partial void UpdateCTPhieuBienNhanH(CTPhieuBienNhanH instance);
    partial void DeleteCTPhieuBienNhanH(CTPhieuBienNhanH instance);
    partial void InsertTaiKhoan(TaiKhoan instance);
    partial void UpdateTaiKhoan(TaiKhoan instance);
    partial void DeleteTaiKhoan(TaiKhoan instance);
    partial void InsertDSTrungTuyen(DSTrungTuyen instance);
    partial void UpdateDSTrungTuyen(DSTrungTuyen instance);
    partial void DeleteDSTrungTuyen(DSTrungTuyen instance);
    partial void InsertGiaoVien(GiaoVien instance);
    partial void UpdateGiaoVien(GiaoVien instance);
    partial void DeleteGiaoVien(GiaoVien instance);
    partial void InsertGiayXacNhanNhapHoc(GiayXacNhanNhapHoc instance);
    partial void UpdateGiayXacNhanNhapHoc(GiayXacNhanNhapHoc instance);
    partial void DeleteGiayXacNhanNhapHoc(GiayXacNhanNhapHoc instance);
    partial void InsertHanhKiem(HanhKiem instance);
    partial void UpdateHanhKiem(HanhKiem instance);
    partial void DeleteHanhKiem(HanhKiem instance);
    partial void InsertHoaDon(HoaDon instance);
    partial void UpdateHoaDon(HoaDon instance);
    partial void DeleteHoaDon(HoaDon instance);
    partial void InsertHocKy(HocKy instance);
    partial void UpdateHocKy(HocKy instance);
    partial void DeleteHocKy(HocKy instance);
    partial void InsertHocPhi(HocPhi instance);
    partial void UpdateHocPhi(HocPhi instance);
    partial void DeleteHocPhi(HocPhi instance);
    partial void InsertHOCSINH(HOCSINH instance);
    partial void UpdateHOCSINH(HOCSINH instance);
    partial void DeleteHOCSINH(HOCSINH instance);
    partial void InsertHocSinh_LopHoc(HocSinh_LopHoc instance);
    partial void UpdateHocSinh_LopHoc(HocSinh_LopHoc instance);
    partial void DeleteHocSinh_LopHoc(HocSinh_LopHoc instance);
    partial void InsertHoSo(HoSo instance);
    partial void UpdateHoSo(HoSo instance);
    partial void DeleteHoSo(HoSo instance);
    partial void InsertHSChoNhapHoc(HSChoNhapHoc instance);
    partial void UpdateHSChoNhapHoc(HSChoNhapHoc instance);
    partial void DeleteHSChoNhapHoc(HSChoNhapHoc instance);
    partial void InsertKetQua(KetQua instance);
    partial void UpdateKetQua(KetQua instance);
    partial void DeleteKetQua(KetQua instance);
    partial void InsertKhoi(Khoi instance);
    partial void UpdateKhoi(Khoi instance);
    partial void DeleteKhoi(Khoi instance);
    partial void InsertLoaiKiemTra(LoaiKiemTra instance);
    partial void UpdateLoaiKiemTra(LoaiKiemTra instance);
    partial void DeleteLoaiKiemTra(LoaiKiemTra instance);
    partial void InsertLoaiNhanVien(LoaiNhanVien instance);
    partial void UpdateLoaiNhanVien(LoaiNhanVien instance);
    partial void DeleteLoaiNhanVien(LoaiNhanVien instance);
    partial void InsertLopHoc(LopHoc instance);
    partial void UpdateLopHoc(LopHoc instance);
    partial void DeleteLopHoc(LopHoc instance);
    partial void InsertLopHoc_MonHoc(LopHoc_MonHoc instance);
    partial void UpdateLopHoc_MonHoc(LopHoc_MonHoc instance);
    partial void DeleteLopHoc_MonHoc(LopHoc_MonHoc instance);
    partial void InsertMonHoc(MonHoc instance);
    partial void UpdateMonHoc(MonHoc instance);
    partial void DeleteMonHoc(MonHoc instance);
    partial void InsertNamHoc(NamHoc instance);
    partial void UpdateNamHoc(NamHoc instance);
    partial void DeleteNamHoc(NamHoc instance);
    partial void InsertNhanVien(NhanVien instance);
    partial void UpdateNhanVien(NhanVien instance);
    partial void DeleteNhanVien(NhanVien instance);
    partial void InsertPhieuBienNhanBieuHien(PhieuBienNhanBieuHien instance);
    partial void UpdatePhieuBienNhanBieuHien(PhieuBienNhanBieuHien instance);
    partial void DeletePhieuBienNhanBieuHien(PhieuBienNhanBieuHien instance);
    partial void InsertPhieuBienNhanH(PhieuBienNhanH instance);
    partial void UpdatePhieuBienNhanH(PhieuBienNhanH instance);
    partial void DeletePhieuBienNhanH(PhieuBienNhanH instance);
    #endregion
		
		public QL_THPTDataContext() : 
				base(global::DTO.Properties.Settings.Default.QLHOCSINHConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public QL_THPTDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public QL_THPTDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public QL_THPTDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public QL_THPTDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<CTPhieuBienNhanH> CTPhieuBienNhanHs
		{
			get
			{
				return this.GetTable<CTPhieuBienNhanH>();
			}
		}
		
		public System.Data.Linq.Table<TaiKhoan> TaiKhoans
		{
			get
			{
				return this.GetTable<TaiKhoan>();
			}
		}
		
		public System.Data.Linq.Table<DSTrungTuyen> DSTrungTuyens
		{
			get
			{
				return this.GetTable<DSTrungTuyen>();
			}
		}
		
		public System.Data.Linq.Table<GiaoVien> GiaoViens
		{
			get
			{
				return this.GetTable<GiaoVien>();
			}
		}
		
		public System.Data.Linq.Table<GiayXacNhanNhapHoc> GiayXacNhanNhapHocs
		{
			get
			{
				return this.GetTable<GiayXacNhanNhapHoc>();
			}
		}
		
		public System.Data.Linq.Table<HanhKiem> HanhKiems
		{
			get
			{
				return this.GetTable<HanhKiem>();
			}
		}
		
		public System.Data.Linq.Table<HoaDon> HoaDons
		{
			get
			{
				return this.GetTable<HoaDon>();
			}
		}
		
		public System.Data.Linq.Table<HocKy> HocKies
		{
			get
			{
				return this.GetTable<HocKy>();
			}
		}
		
		public System.Data.Linq.Table<HocPhi> HocPhis
		{
			get
			{
				return this.GetTable<HocPhi>();
			}
		}
		
		public System.Data.Linq.Table<HOCSINH> HOCSINHs
		{
			get
			{
				return this.GetTable<HOCSINH>();
			}
		}
		
		public System.Data.Linq.Table<HocSinh_LopHoc> HocSinh_LopHocs
		{
			get
			{
				return this.GetTable<HocSinh_LopHoc>();
			}
		}
		
		public System.Data.Linq.Table<HoSo> HoSos
		{
			get
			{
				return this.GetTable<HoSo>();
			}
		}
		
		public System.Data.Linq.Table<HSChoNhapHoc> HSChoNhapHocs
		{
			get
			{
				return this.GetTable<HSChoNhapHoc>();
			}
		}
		
		public System.Data.Linq.Table<KetQua> KetQuas
		{
			get
			{
				return this.GetTable<KetQua>();
			}
		}
		
		public System.Data.Linq.Table<Khoi> Khois
		{
			get
			{
				return this.GetTable<Khoi>();
			}
		}
		
		public System.Data.Linq.Table<LoaiKiemTra> LoaiKiemTras
		{
			get
			{
				return this.GetTable<LoaiKiemTra>();
			}
		}
		
		public System.Data.Linq.Table<LoaiNhanVien> LoaiNhanViens
		{
			get
			{
				return this.GetTable<LoaiNhanVien>();
			}
		}
		
		public System.Data.Linq.Table<LopHoc> LopHocs
		{
			get
			{
				return this.GetTable<LopHoc>();
			}
		}
		
		public System.Data.Linq.Table<LopHoc_MonHoc> LopHoc_MonHocs
		{
			get
			{
				return this.GetTable<LopHoc_MonHoc>();
			}
		}
		
		public System.Data.Linq.Table<MonHoc> MonHocs
		{
			get
			{
				return this.GetTable<MonHoc>();
			}
		}
		
		public System.Data.Linq.Table<NamHoc> NamHocs
		{
			get
			{
				return this.GetTable<NamHoc>();
			}
		}
		
		public System.Data.Linq.Table<NhanVien> NhanViens
		{
			get
			{
				return this.GetTable<NhanVien>();
			}
		}
		
		public System.Data.Linq.Table<PhieuBienNhanBieuHien> PhieuBienNhanBieuHiens
		{
			get
			{
				return this.GetTable<PhieuBienNhanBieuHien>();
			}
		}
		
		public System.Data.Linq.Table<PhieuBienNhanH> PhieuBienNhanHs
		{
			get
			{
				return this.GetTable<PhieuBienNhanH>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CTPhieuBienNhanHS")]
	public partial class CTPhieuBienNhanH : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaPhieuBN;
		
		private string _MaHoSo;
		
		private int _SoLuong;
		
		private string _GhiChu;
		
		private EntityRef<HoSo> _HoSo;
		
		private EntityRef<PhieuBienNhanH> _PhieuBienNhanH;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaPhieuBNChanging(string value);
    partial void OnMaPhieuBNChanged();
    partial void OnMaHoSoChanging(string value);
    partial void OnMaHoSoChanged();
    partial void OnSoLuongChanging(int value);
    partial void OnSoLuongChanged();
    partial void OnGhiChuChanging(string value);
    partial void OnGhiChuChanged();
    #endregion
		
		public CTPhieuBienNhanH()
		{
			this._HoSo = default(EntityRef<HoSo>);
			this._PhieuBienNhanH = default(EntityRef<PhieuBienNhanH>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaPhieuBN", DbType="Char(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaPhieuBN
		{
			get
			{
				return this._MaPhieuBN;
			}
			set
			{
				if ((this._MaPhieuBN != value))
				{
					if (this._PhieuBienNhanH.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaPhieuBNChanging(value);
					this.SendPropertyChanging();
					this._MaPhieuBN = value;
					this.SendPropertyChanged("MaPhieuBN");
					this.OnMaPhieuBNChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaHoSo", DbType="Char(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaHoSo
		{
			get
			{
				return this._MaHoSo;
			}
			set
			{
				if ((this._MaHoSo != value))
				{
					if (this._HoSo.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaHoSoChanging(value);
					this.SendPropertyChanging();
					this._MaHoSo = value;
					this.SendPropertyChanged("MaHoSo");
					this.OnMaHoSoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoLuong", DbType="Int NOT NULL")]
		public int SoLuong
		{
			get
			{
				return this._SoLuong;
			}
			set
			{
				if ((this._SoLuong != value))
				{
					this.OnSoLuongChanging(value);
					this.SendPropertyChanging();
					this._SoLuong = value;
					this.SendPropertyChanged("SoLuong");
					this.OnSoLuongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GhiChu", DbType="NVarChar(50)")]
		public string GhiChu
		{
			get
			{
				return this._GhiChu;
			}
			set
			{
				if ((this._GhiChu != value))
				{
					this.OnGhiChuChanging(value);
					this.SendPropertyChanging();
					this._GhiChu = value;
					this.SendPropertyChanged("GhiChu");
					this.OnGhiChuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HoSo_CTPhieuBienNhanH", Storage="_HoSo", ThisKey="MaHoSo", OtherKey="MaHoSo", IsForeignKey=true)]
		public HoSo HoSo
		{
			get
			{
				return this._HoSo.Entity;
			}
			set
			{
				HoSo previousValue = this._HoSo.Entity;
				if (((previousValue != value) 
							|| (this._HoSo.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HoSo.Entity = null;
						previousValue.CTPhieuBienNhanHs.Remove(this);
					}
					this._HoSo.Entity = value;
					if ((value != null))
					{
						value.CTPhieuBienNhanHs.Add(this);
						this._MaHoSo = value.MaHoSo;
					}
					else
					{
						this._MaHoSo = default(string);
					}
					this.SendPropertyChanged("HoSo");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PhieuBienNhanH_CTPhieuBienNhanH", Storage="_PhieuBienNhanH", ThisKey="MaPhieuBN", OtherKey="MaPhieu", IsForeignKey=true)]
		public PhieuBienNhanH PhieuBienNhanH
		{
			get
			{
				return this._PhieuBienNhanH.Entity;
			}
			set
			{
				PhieuBienNhanH previousValue = this._PhieuBienNhanH.Entity;
				if (((previousValue != value) 
							|| (this._PhieuBienNhanH.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PhieuBienNhanH.Entity = null;
						previousValue.CTPhieuBienNhanHs.Remove(this);
					}
					this._PhieuBienNhanH.Entity = value;
					if ((value != null))
					{
						value.CTPhieuBienNhanHs.Add(this);
						this._MaPhieuBN = value.MaPhieu;
					}
					else
					{
						this._MaPhieuBN = default(string);
					}
					this.SendPropertyChanged("PhieuBienNhanH");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TaiKhoan")]
	public partial class TaiKhoan : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _TenTaiKhoan;
		
		private string _MatKhau;
		
		private string _MaNV;
		
		private EntityRef<NhanVien> _NhanVien;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTenTaiKhoanChanging(string value);
    partial void OnTenTaiKhoanChanged();
    partial void OnMatKhauChanging(string value);
    partial void OnMatKhauChanged();
    partial void OnMaNVChanging(string value);
    partial void OnMaNVChanged();
    #endregion
		
		public TaiKhoan()
		{
			this._NhanVien = default(EntityRef<NhanVien>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenTaiKhoan", DbType="Char(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string TenTaiKhoan
		{
			get
			{
				return this._TenTaiKhoan;
			}
			set
			{
				if ((this._TenTaiKhoan != value))
				{
					this.OnTenTaiKhoanChanging(value);
					this.SendPropertyChanging();
					this._TenTaiKhoan = value;
					this.SendPropertyChanged("TenTaiKhoan");
					this.OnTenTaiKhoanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MatKhau", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string MatKhau
		{
			get
			{
				return this._MatKhau;
			}
			set
			{
				if ((this._MatKhau != value))
				{
					this.OnMatKhauChanging(value);
					this.SendPropertyChanging();
					this._MatKhau = value;
					this.SendPropertyChanged("MatKhau");
					this.OnMatKhauChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaNV", DbType="Char(10)")]
		public string MaNV
		{
			get
			{
				return this._MaNV;
			}
			set
			{
				if ((this._MaNV != value))
				{
					if (this._NhanVien.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaNVChanging(value);
					this.SendPropertyChanging();
					this._MaNV = value;
					this.SendPropertyChanged("MaNV");
					this.OnMaNVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NhanVien_TaiKhoan", Storage="_NhanVien", ThisKey="MaNV", OtherKey="MaNV", IsForeignKey=true)]
		public NhanVien NhanVien
		{
			get
			{
				return this._NhanVien.Entity;
			}
			set
			{
				NhanVien previousValue = this._NhanVien.Entity;
				if (((previousValue != value) 
							|| (this._NhanVien.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NhanVien.Entity = null;
						previousValue.TaiKhoans.Remove(this);
					}
					this._NhanVien.Entity = value;
					if ((value != null))
					{
						value.TaiKhoans.Add(this);
						this._MaNV = value.MaNV;
					}
					else
					{
						this._MaNV = default(string);
					}
					this.SendPropertyChanged("NhanVien");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DSTrungTuyen")]
	public partial class DSTrungTuyen : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaTS;
		
		private string _TenTS;
		
		private string _CCCD;
		
		private string _DiaChi;
		
		private System.DateTime _NgaySinh;
		
		private bool _GioiTinh;
		
		private string _SoDienThoai;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaTSChanging(string value);
    partial void OnMaTSChanged();
    partial void OnTenTSChanging(string value);
    partial void OnTenTSChanged();
    partial void OnCCCDChanging(string value);
    partial void OnCCCDChanged();
    partial void OnDiaChiChanging(string value);
    partial void OnDiaChiChanged();
    partial void OnNgaySinhChanging(System.DateTime value);
    partial void OnNgaySinhChanged();
    partial void OnGioiTinhChanging(bool value);
    partial void OnGioiTinhChanged();
    partial void OnSoDienThoaiChanging(string value);
    partial void OnSoDienThoaiChanged();
    #endregion
		
		public DSTrungTuyen()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaTS", DbType="Char(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaTS
		{
			get
			{
				return this._MaTS;
			}
			set
			{
				if ((this._MaTS != value))
				{
					this.OnMaTSChanging(value);
					this.SendPropertyChanging();
					this._MaTS = value;
					this.SendPropertyChanged("MaTS");
					this.OnMaTSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenTS", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string TenTS
		{
			get
			{
				return this._TenTS;
			}
			set
			{
				if ((this._TenTS != value))
				{
					this.OnTenTSChanging(value);
					this.SendPropertyChanging();
					this._TenTS = value;
					this.SendPropertyChanged("TenTS");
					this.OnTenTSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CCCD", DbType="Char(12) NOT NULL", CanBeNull=false)]
		public string CCCD
		{
			get
			{
				return this._CCCD;
			}
			set
			{
				if ((this._CCCD != value))
				{
					this.OnCCCDChanging(value);
					this.SendPropertyChanging();
					this._CCCD = value;
					this.SendPropertyChanged("CCCD");
					this.OnCCCDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiaChi", DbType="NVarChar(MAX)")]
		public string DiaChi
		{
			get
			{
				return this._DiaChi;
			}
			set
			{
				if ((this._DiaChi != value))
				{
					this.OnDiaChiChanging(value);
					this.SendPropertyChanging();
					this._DiaChi = value;
					this.SendPropertyChanged("DiaChi");
					this.OnDiaChiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgaySinh", DbType="Date NOT NULL")]
		public System.DateTime NgaySinh
		{
			get
			{
				return this._NgaySinh;
			}
			set
			{
				if ((this._NgaySinh != value))
				{
					this.OnNgaySinhChanging(value);
					this.SendPropertyChanging();
					this._NgaySinh = value;
					this.SendPropertyChanged("NgaySinh");
					this.OnNgaySinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GioiTinh", DbType="Bit NOT NULL")]
		public bool GioiTinh
		{
			get
			{
				return this._GioiTinh;
			}
			set
			{
				if ((this._GioiTinh != value))
				{
					this.OnGioiTinhChanging(value);
					this.SendPropertyChanging();
					this._GioiTinh = value;
					this.SendPropertyChanged("GioiTinh");
					this.OnGioiTinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoDienThoai", DbType="Char(10)")]
		public string SoDienThoai
		{
			get
			{
				return this._SoDienThoai;
			}
			set
			{
				if ((this._SoDienThoai != value))
				{
					this.OnSoDienThoaiChanging(value);
					this.SendPropertyChanging();
					this._SoDienThoai = value;
					this.SendPropertyChanged("SoDienThoai");
					this.OnSoDienThoaiChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.GiaoVien")]
	public partial class GiaoVien : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaNV;
		
		private string _MaMon;
		
		private EntitySet<LopHoc> _LopHocs;
		
		private EntitySet<LopHoc_MonHoc> _LopHoc_MonHocs;
		
		private EntitySet<PhieuBienNhanBieuHien> _PhieuBienNhanBieuHiens;
		
		private EntityRef<MonHoc> _MonHoc;
		
		private EntityRef<NhanVien> _NhanVien;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaNVChanging(string value);
    partial void OnMaNVChanged();
    partial void OnMaMonChanging(string value);
    partial void OnMaMonChanged();
    #endregion
		
		public GiaoVien()
		{
			this._LopHocs = new EntitySet<LopHoc>(new Action<LopHoc>(this.attach_LopHocs), new Action<LopHoc>(this.detach_LopHocs));
			this._LopHoc_MonHocs = new EntitySet<LopHoc_MonHoc>(new Action<LopHoc_MonHoc>(this.attach_LopHoc_MonHocs), new Action<LopHoc_MonHoc>(this.detach_LopHoc_MonHocs));
			this._PhieuBienNhanBieuHiens = new EntitySet<PhieuBienNhanBieuHien>(new Action<PhieuBienNhanBieuHien>(this.attach_PhieuBienNhanBieuHiens), new Action<PhieuBienNhanBieuHien>(this.detach_PhieuBienNhanBieuHiens));
			this._MonHoc = default(EntityRef<MonHoc>);
			this._NhanVien = default(EntityRef<NhanVien>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaNV", DbType="Char(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaNV
		{
			get
			{
				return this._MaNV;
			}
			set
			{
				if ((this._MaNV != value))
				{
					if (this._NhanVien.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaNVChanging(value);
					this.SendPropertyChanging();
					this._MaNV = value;
					this.SendPropertyChanged("MaNV");
					this.OnMaNVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaMon", DbType="Char(10) NOT NULL", CanBeNull=false)]
		public string MaMon
		{
			get
			{
				return this._MaMon;
			}
			set
			{
				if ((this._MaMon != value))
				{
					if (this._MonHoc.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaMonChanging(value);
					this.SendPropertyChanging();
					this._MaMon = value;
					this.SendPropertyChanged("MaMon");
					this.OnMaMonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GiaoVien_LopHoc", Storage="_LopHocs", ThisKey="MaNV", OtherKey="GiaoVienCN")]
		public EntitySet<LopHoc> LopHocs
		{
			get
			{
				return this._LopHocs;
			}
			set
			{
				this._LopHocs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GiaoVien_LopHoc_MonHoc", Storage="_LopHoc_MonHocs", ThisKey="MaNV", OtherKey="MaGV")]
		public EntitySet<LopHoc_MonHoc> LopHoc_MonHocs
		{
			get
			{
				return this._LopHoc_MonHocs;
			}
			set
			{
				this._LopHoc_MonHocs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GiaoVien_PhieuBienNhanBieuHien", Storage="_PhieuBienNhanBieuHiens", ThisKey="MaNV", OtherKey="MaGV")]
		public EntitySet<PhieuBienNhanBieuHien> PhieuBienNhanBieuHiens
		{
			get
			{
				return this._PhieuBienNhanBieuHiens;
			}
			set
			{
				this._PhieuBienNhanBieuHiens.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MonHoc_GiaoVien", Storage="_MonHoc", ThisKey="MaMon", OtherKey="MaMon", IsForeignKey=true)]
		public MonHoc MonHoc
		{
			get
			{
				return this._MonHoc.Entity;
			}
			set
			{
				MonHoc previousValue = this._MonHoc.Entity;
				if (((previousValue != value) 
							|| (this._MonHoc.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MonHoc.Entity = null;
						previousValue.GiaoViens.Remove(this);
					}
					this._MonHoc.Entity = value;
					if ((value != null))
					{
						value.GiaoViens.Add(this);
						this._MaMon = value.MaMon;
					}
					else
					{
						this._MaMon = default(string);
					}
					this.SendPropertyChanged("MonHoc");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NhanVien_GiaoVien", Storage="_NhanVien", ThisKey="MaNV", OtherKey="MaNV", IsForeignKey=true)]
		public NhanVien NhanVien
		{
			get
			{
				return this._NhanVien.Entity;
			}
			set
			{
				NhanVien previousValue = this._NhanVien.Entity;
				if (((previousValue != value) 
							|| (this._NhanVien.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NhanVien.Entity = null;
						previousValue.GiaoVien = null;
					}
					this._NhanVien.Entity = value;
					if ((value != null))
					{
						value.GiaoVien = this;
						this._MaNV = value.MaNV;
					}
					else
					{
						this._MaNV = default(string);
					}
					this.SendPropertyChanged("NhanVien");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_LopHocs(LopHoc entity)
		{
			this.SendPropertyChanging();
			entity.GiaoVien = this;
		}
		
		private void detach_LopHocs(LopHoc entity)
		{
			this.SendPropertyChanging();
			entity.GiaoVien = null;
		}
		
		private void attach_LopHoc_MonHocs(LopHoc_MonHoc entity)
		{
			this.SendPropertyChanging();
			entity.GiaoVien = this;
		}
		
		private void detach_LopHoc_MonHocs(LopHoc_MonHoc entity)
		{
			this.SendPropertyChanging();
			entity.GiaoVien = null;
		}
		
		private void attach_PhieuBienNhanBieuHiens(PhieuBienNhanBieuHien entity)
		{
			this.SendPropertyChanging();
			entity.GiaoVien = this;
		}
		
		private void detach_PhieuBienNhanBieuHiens(PhieuBienNhanBieuHien entity)
		{
			this.SendPropertyChanging();
			entity.GiaoVien = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.GiayXacNhanNhapHoc")]
	public partial class GiayXacNhanNhapHoc : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaHS;
		
		private string _MaNV;
		
		private System.Nullable<System.DateTime> _NgayLap;
		
		private EntityRef<HOCSINH> _HOCSINH;
		
		private EntityRef<NhanVien> _NhanVien;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaHSChanging(string value);
    partial void OnMaHSChanged();
    partial void OnMaNVChanging(string value);
    partial void OnMaNVChanged();
    partial void OnNgayLapChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayLapChanged();
    #endregion
		
		public GiayXacNhanNhapHoc()
		{
			this._HOCSINH = default(EntityRef<HOCSINH>);
			this._NhanVien = default(EntityRef<NhanVien>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaHS", DbType="Char(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaHS
		{
			get
			{
				return this._MaHS;
			}
			set
			{
				if ((this._MaHS != value))
				{
					if (this._HOCSINH.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaHSChanging(value);
					this.SendPropertyChanging();
					this._MaHS = value;
					this.SendPropertyChanged("MaHS");
					this.OnMaHSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaNV", DbType="Char(10) NOT NULL", CanBeNull=false)]
		public string MaNV
		{
			get
			{
				return this._MaNV;
			}
			set
			{
				if ((this._MaNV != value))
				{
					if (this._NhanVien.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaNVChanging(value);
					this.SendPropertyChanging();
					this._MaNV = value;
					this.SendPropertyChanged("MaNV");
					this.OnMaNVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayLap", DbType="Date")]
		public System.Nullable<System.DateTime> NgayLap
		{
			get
			{
				return this._NgayLap;
			}
			set
			{
				if ((this._NgayLap != value))
				{
					this.OnNgayLapChanging(value);
					this.SendPropertyChanging();
					this._NgayLap = value;
					this.SendPropertyChanged("NgayLap");
					this.OnNgayLapChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HOCSINH_GiayXacNhanNhapHoc", Storage="_HOCSINH", ThisKey="MaHS", OtherKey="MaHS", IsForeignKey=true)]
		public HOCSINH HOCSINH
		{
			get
			{
				return this._HOCSINH.Entity;
			}
			set
			{
				HOCSINH previousValue = this._HOCSINH.Entity;
				if (((previousValue != value) 
							|| (this._HOCSINH.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HOCSINH.Entity = null;
						previousValue.GiayXacNhanNhapHoc = null;
					}
					this._HOCSINH.Entity = value;
					if ((value != null))
					{
						value.GiayXacNhanNhapHoc = this;
						this._MaHS = value.MaHS;
					}
					else
					{
						this._MaHS = default(string);
					}
					this.SendPropertyChanged("HOCSINH");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NhanVien_GiayXacNhanNhapHoc", Storage="_NhanVien", ThisKey="MaNV", OtherKey="MaNV", IsForeignKey=true)]
		public NhanVien NhanVien
		{
			get
			{
				return this._NhanVien.Entity;
			}
			set
			{
				NhanVien previousValue = this._NhanVien.Entity;
				if (((previousValue != value) 
							|| (this._NhanVien.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NhanVien.Entity = null;
						previousValue.GiayXacNhanNhapHocs.Remove(this);
					}
					this._NhanVien.Entity = value;
					if ((value != null))
					{
						value.GiayXacNhanNhapHocs.Add(this);
						this._MaNV = value.MaNV;
					}
					else
					{
						this._MaNV = default(string);
					}
					this.SendPropertyChanged("NhanVien");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HanhKiem")]
	public partial class HanhKiem : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaHanhKiem;
		
		private string _TenHanhKiem;
		
		private int _Diem;
		
		private EntitySet<PhieuBienNhanBieuHien> _PhieuBienNhanBieuHiens;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaHanhKiemChanging(string value);
    partial void OnMaHanhKiemChanged();
    partial void OnTenHanhKiemChanging(string value);
    partial void OnTenHanhKiemChanged();
    partial void OnDiemChanging(int value);
    partial void OnDiemChanged();
    #endregion
		
		public HanhKiem()
		{
			this._PhieuBienNhanBieuHiens = new EntitySet<PhieuBienNhanBieuHien>(new Action<PhieuBienNhanBieuHien>(this.attach_PhieuBienNhanBieuHiens), new Action<PhieuBienNhanBieuHien>(this.detach_PhieuBienNhanBieuHiens));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaHanhKiem", DbType="Char(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaHanhKiem
		{
			get
			{
				return this._MaHanhKiem;
			}
			set
			{
				if ((this._MaHanhKiem != value))
				{
					this.OnMaHanhKiemChanging(value);
					this.SendPropertyChanging();
					this._MaHanhKiem = value;
					this.SendPropertyChanged("MaHanhKiem");
					this.OnMaHanhKiemChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenHanhKiem", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string TenHanhKiem
		{
			get
			{
				return this._TenHanhKiem;
			}
			set
			{
				if ((this._TenHanhKiem != value))
				{
					this.OnTenHanhKiemChanging(value);
					this.SendPropertyChanging();
					this._TenHanhKiem = value;
					this.SendPropertyChanged("TenHanhKiem");
					this.OnTenHanhKiemChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Diem", DbType="Int NOT NULL")]
		public int Diem
		{
			get
			{
				return this._Diem;
			}
			set
			{
				if ((this._Diem != value))
				{
					this.OnDiemChanging(value);
					this.SendPropertyChanging();
					this._Diem = value;
					this.SendPropertyChanged("Diem");
					this.OnDiemChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HanhKiem_PhieuBienNhanBieuHien", Storage="_PhieuBienNhanBieuHiens", ThisKey="MaHanhKiem", OtherKey="MaHanhKiem")]
		public EntitySet<PhieuBienNhanBieuHien> PhieuBienNhanBieuHiens
		{
			get
			{
				return this._PhieuBienNhanBieuHiens;
			}
			set
			{
				this._PhieuBienNhanBieuHiens.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PhieuBienNhanBieuHiens(PhieuBienNhanBieuHien entity)
		{
			this.SendPropertyChanging();
			entity.HanhKiem = this;
		}
		
		private void detach_PhieuBienNhanBieuHiens(PhieuBienNhanBieuHien entity)
		{
			this.SendPropertyChanging();
			entity.HanhKiem = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HoaDon")]
	public partial class HoaDon : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaHD;
		
		private string _MaNV;
		
		private string _MaHS;
		
		private string _MaHocPhi;
		
		private decimal _SoTien;
		
		private EntityRef<HOCSINH> _HOCSINH;
		
		private EntityRef<NhanVien> _NhanVien;
		
		private EntityRef<NhanVien> _NhanVien1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaHDChanging(string value);
    partial void OnMaHDChanged();
    partial void OnMaNVChanging(string value);
    partial void OnMaNVChanged();
    partial void OnMaHSChanging(string value);
    partial void OnMaHSChanged();
    partial void OnMaHocPhiChanging(string value);
    partial void OnMaHocPhiChanged();
    partial void OnSoTienChanging(decimal value);
    partial void OnSoTienChanged();
    #endregion
		
		public HoaDon()
		{
			this._HOCSINH = default(EntityRef<HOCSINH>);
			this._NhanVien = default(EntityRef<NhanVien>);
			this._NhanVien1 = default(EntityRef<NhanVien>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaHD", DbType="Char(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaHD
		{
			get
			{
				return this._MaHD;
			}
			set
			{
				if ((this._MaHD != value))
				{
					this.OnMaHDChanging(value);
					this.SendPropertyChanging();
					this._MaHD = value;
					this.SendPropertyChanged("MaHD");
					this.OnMaHDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaNV", DbType="Char(10) NOT NULL", CanBeNull=false)]
		public string MaNV
		{
			get
			{
				return this._MaNV;
			}
			set
			{
				if ((this._MaNV != value))
				{
					if (this._NhanVien1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaNVChanging(value);
					this.SendPropertyChanging();
					this._MaNV = value;
					this.SendPropertyChanged("MaNV");
					this.OnMaNVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaHS", DbType="Char(10) NOT NULL", CanBeNull=false)]
		public string MaHS
		{
			get
			{
				return this._MaHS;
			}
			set
			{
				if ((this._MaHS != value))
				{
					if (this._HOCSINH.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaHSChanging(value);
					this.SendPropertyChanging();
					this._MaHS = value;
					this.SendPropertyChanged("MaHS");
					this.OnMaHSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaHocPhi", DbType="Char(10) NOT NULL", CanBeNull=false)]
		public string MaHocPhi
		{
			get
			{
				return this._MaHocPhi;
			}
			set
			{
				if ((this._MaHocPhi != value))
				{
					if (this._NhanVien.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaHocPhiChanging(value);
					this.SendPropertyChanging();
					this._MaHocPhi = value;
					this.SendPropertyChanged("MaHocPhi");
					this.OnMaHocPhiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoTien", DbType="Money NOT NULL")]
		public decimal SoTien
		{
			get
			{
				return this._SoTien;
			}
			set
			{
				if ((this._SoTien != value))
				{
					this.OnSoTienChanging(value);
					this.SendPropertyChanging();
					this._SoTien = value;
					this.SendPropertyChanged("SoTien");
					this.OnSoTienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HOCSINH_HoaDon", Storage="_HOCSINH", ThisKey="MaHS", OtherKey="MaHS", IsForeignKey=true)]
		public HOCSINH HOCSINH
		{
			get
			{
				return this._HOCSINH.Entity;
			}
			set
			{
				HOCSINH previousValue = this._HOCSINH.Entity;
				if (((previousValue != value) 
							|| (this._HOCSINH.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HOCSINH.Entity = null;
						previousValue.HoaDons.Remove(this);
					}
					this._HOCSINH.Entity = value;
					if ((value != null))
					{
						value.HoaDons.Add(this);
						this._MaHS = value.MaHS;
					}
					else
					{
						this._MaHS = default(string);
					}
					this.SendPropertyChanged("HOCSINH");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NhanVien_HoaDon", Storage="_NhanVien", ThisKey="MaHocPhi", OtherKey="MaNV", IsForeignKey=true)]
		public NhanVien NhanVien
		{
			get
			{
				return this._NhanVien.Entity;
			}
			set
			{
				NhanVien previousValue = this._NhanVien.Entity;
				if (((previousValue != value) 
							|| (this._NhanVien.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NhanVien.Entity = null;
						previousValue.HoaDons.Remove(this);
					}
					this._NhanVien.Entity = value;
					if ((value != null))
					{
						value.HoaDons.Add(this);
						this._MaHocPhi = value.MaNV;
					}
					else
					{
						this._MaHocPhi = default(string);
					}
					this.SendPropertyChanged("NhanVien");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NhanVien_HoaDon1", Storage="_NhanVien1", ThisKey="MaNV", OtherKey="MaNV", IsForeignKey=true)]
		public NhanVien NhanVien1
		{
			get
			{
				return this._NhanVien1.Entity;
			}
			set
			{
				NhanVien previousValue = this._NhanVien1.Entity;
				if (((previousValue != value) 
							|| (this._NhanVien1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NhanVien1.Entity = null;
						previousValue.HoaDons1.Remove(this);
					}
					this._NhanVien1.Entity = value;
					if ((value != null))
					{
						value.HoaDons1.Add(this);
						this._MaNV = value.MaNV;
					}
					else
					{
						this._MaNV = default(string);
					}
					this.SendPropertyChanged("NhanVien1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HocKy")]
	public partial class HocKy : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaHocKy;
		
		private string _TenHocKy;
		
		private EntitySet<HocPhi> _HocPhis;
		
		private EntitySet<KetQua> _KetQuas;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaHocKyChanging(string value);
    partial void OnMaHocKyChanged();
    partial void OnTenHocKyChanging(string value);
    partial void OnTenHocKyChanged();
    #endregion
		
		public HocKy()
		{
			this._HocPhis = new EntitySet<HocPhi>(new Action<HocPhi>(this.attach_HocPhis), new Action<HocPhi>(this.detach_HocPhis));
			this._KetQuas = new EntitySet<KetQua>(new Action<KetQua>(this.attach_KetQuas), new Action<KetQua>(this.detach_KetQuas));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaHocKy", DbType="Char(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaHocKy
		{
			get
			{
				return this._MaHocKy;
			}
			set
			{
				if ((this._MaHocKy != value))
				{
					this.OnMaHocKyChanging(value);
					this.SendPropertyChanging();
					this._MaHocKy = value;
					this.SendPropertyChanged("MaHocKy");
					this.OnMaHocKyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenHocKy", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string TenHocKy
		{
			get
			{
				return this._TenHocKy;
			}
			set
			{
				if ((this._TenHocKy != value))
				{
					this.OnTenHocKyChanging(value);
					this.SendPropertyChanging();
					this._TenHocKy = value;
					this.SendPropertyChanged("TenHocKy");
					this.OnTenHocKyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HocKy_HocPhi", Storage="_HocPhis", ThisKey="MaHocKy", OtherKey="HocKy")]
		public EntitySet<HocPhi> HocPhis
		{
			get
			{
				return this._HocPhis;
			}
			set
			{
				this._HocPhis.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HocKy_KetQua", Storage="_KetQuas", ThisKey="MaHocKy", OtherKey="MaHocKy")]
		public EntitySet<KetQua> KetQuas
		{
			get
			{
				return this._KetQuas;
			}
			set
			{
				this._KetQuas.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_HocPhis(HocPhi entity)
		{
			this.SendPropertyChanging();
			entity.HocKy1 = this;
		}
		
		private void detach_HocPhis(HocPhi entity)
		{
			this.SendPropertyChanging();
			entity.HocKy1 = null;
		}
		
		private void attach_KetQuas(KetQua entity)
		{
			this.SendPropertyChanging();
			entity.HocKy = this;
		}
		
		private void detach_KetQuas(KetQua entity)
		{
			this.SendPropertyChanging();
			entity.HocKy = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HocPhi")]
	public partial class HocPhi : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaHocPhi;
		
		private decimal _SoTien;
		
		private string _MaKhoi;
		
		private string _MaNamHoc;
		
		private string _HocKy;
		
		private EntityRef<HocKy> _HocKy1;
		
		private EntityRef<Khoi> _Khoi;
		
		private EntityRef<NamHoc> _NamHoc;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaHocPhiChanging(string value);
    partial void OnMaHocPhiChanged();
    partial void OnSoTienChanging(decimal value);
    partial void OnSoTienChanged();
    partial void OnMaKhoiChanging(string value);
    partial void OnMaKhoiChanged();
    partial void OnMaNamHocChanging(string value);
    partial void OnMaNamHocChanged();
    partial void OnHocKyChanging(string value);
    partial void OnHocKyChanged();
    #endregion
		
		public HocPhi()
		{
			this._HocKy1 = default(EntityRef<HocKy>);
			this._Khoi = default(EntityRef<Khoi>);
			this._NamHoc = default(EntityRef<NamHoc>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaHocPhi", DbType="Char(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaHocPhi
		{
			get
			{
				return this._MaHocPhi;
			}
			set
			{
				if ((this._MaHocPhi != value))
				{
					this.OnMaHocPhiChanging(value);
					this.SendPropertyChanging();
					this._MaHocPhi = value;
					this.SendPropertyChanged("MaHocPhi");
					this.OnMaHocPhiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoTien", DbType="Money NOT NULL")]
		public decimal SoTien
		{
			get
			{
				return this._SoTien;
			}
			set
			{
				if ((this._SoTien != value))
				{
					this.OnSoTienChanging(value);
					this.SendPropertyChanging();
					this._SoTien = value;
					this.SendPropertyChanged("SoTien");
					this.OnSoTienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaKhoi", DbType="Char(10) NOT NULL", CanBeNull=false)]
		public string MaKhoi
		{
			get
			{
				return this._MaKhoi;
			}
			set
			{
				if ((this._MaKhoi != value))
				{
					if (this._Khoi.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaKhoiChanging(value);
					this.SendPropertyChanging();
					this._MaKhoi = value;
					this.SendPropertyChanged("MaKhoi");
					this.OnMaKhoiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaNamHoc", DbType="Char(10) NOT NULL", CanBeNull=false)]
		public string MaNamHoc
		{
			get
			{
				return this._MaNamHoc;
			}
			set
			{
				if ((this._MaNamHoc != value))
				{
					if (this._NamHoc.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaNamHocChanging(value);
					this.SendPropertyChanging();
					this._MaNamHoc = value;
					this.SendPropertyChanged("MaNamHoc");
					this.OnMaNamHocChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HocKy", DbType="Char(10) NOT NULL", CanBeNull=false)]
		public string HocKy
		{
			get
			{
				return this._HocKy;
			}
			set
			{
				if ((this._HocKy != value))
				{
					if (this._HocKy1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnHocKyChanging(value);
					this.SendPropertyChanging();
					this._HocKy = value;
					this.SendPropertyChanged("HocKy");
					this.OnHocKyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HocKy_HocPhi", Storage="_HocKy1", ThisKey="HocKy", OtherKey="MaHocKy", IsForeignKey=true)]
		public HocKy HocKy1
		{
			get
			{
				return this._HocKy1.Entity;
			}
			set
			{
				HocKy previousValue = this._HocKy1.Entity;
				if (((previousValue != value) 
							|| (this._HocKy1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HocKy1.Entity = null;
						previousValue.HocPhis.Remove(this);
					}
					this._HocKy1.Entity = value;
					if ((value != null))
					{
						value.HocPhis.Add(this);
						this._HocKy = value.MaHocKy;
					}
					else
					{
						this._HocKy = default(string);
					}
					this.SendPropertyChanged("HocKy1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Khoi_HocPhi", Storage="_Khoi", ThisKey="MaKhoi", OtherKey="MaKhoi", IsForeignKey=true)]
		public Khoi Khoi
		{
			get
			{
				return this._Khoi.Entity;
			}
			set
			{
				Khoi previousValue = this._Khoi.Entity;
				if (((previousValue != value) 
							|| (this._Khoi.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Khoi.Entity = null;
						previousValue.HocPhis.Remove(this);
					}
					this._Khoi.Entity = value;
					if ((value != null))
					{
						value.HocPhis.Add(this);
						this._MaKhoi = value.MaKhoi;
					}
					else
					{
						this._MaKhoi = default(string);
					}
					this.SendPropertyChanged("Khoi");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NamHoc_HocPhi", Storage="_NamHoc", ThisKey="MaNamHoc", OtherKey="MaNamHoc", IsForeignKey=true)]
		public NamHoc NamHoc
		{
			get
			{
				return this._NamHoc.Entity;
			}
			set
			{
				NamHoc previousValue = this._NamHoc.Entity;
				if (((previousValue != value) 
							|| (this._NamHoc.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NamHoc.Entity = null;
						previousValue.HocPhis.Remove(this);
					}
					this._NamHoc.Entity = value;
					if ((value != null))
					{
						value.HocPhis.Add(this);
						this._MaNamHoc = value.MaNamHoc;
					}
					else
					{
						this._MaNamHoc = default(string);
					}
					this.SendPropertyChanged("NamHoc");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HOCSINH")]
	public partial class HOCSINH : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaHS;
		
		private string _TenHS;
		
		private string _CCCD;
		
		private string _DiaChi;
		
		private System.DateTime _NgaySinh;
		
		private bool _GioiTinh;
		
		private string _SoDienThoai;
		
		private EntityRef<GiayXacNhanNhapHoc> _GiayXacNhanNhapHoc;
		
		private EntitySet<HoaDon> _HoaDons;
		
		private EntitySet<HocSinh_LopHoc> _HocSinh_LopHocs;
		
		private EntitySet<KetQua> _KetQuas;
		
		private EntitySet<PhieuBienNhanBieuHien> _PhieuBienNhanBieuHiens;
		
		private EntitySet<PhieuBienNhanH> _PhieuBienNhanHs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaHSChanging(string value);
    partial void OnMaHSChanged();
    partial void OnTenHSChanging(string value);
    partial void OnTenHSChanged();
    partial void OnCCCDChanging(string value);
    partial void OnCCCDChanged();
    partial void OnDiaChiChanging(string value);
    partial void OnDiaChiChanged();
    partial void OnNgaySinhChanging(System.DateTime value);
    partial void OnNgaySinhChanged();
    partial void OnGioiTinhChanging(bool value);
    partial void OnGioiTinhChanged();
    partial void OnSoDienThoaiChanging(string value);
    partial void OnSoDienThoaiChanged();
    #endregion
		
		public HOCSINH()
		{
			this._GiayXacNhanNhapHoc = default(EntityRef<GiayXacNhanNhapHoc>);
			this._HoaDons = new EntitySet<HoaDon>(new Action<HoaDon>(this.attach_HoaDons), new Action<HoaDon>(this.detach_HoaDons));
			this._HocSinh_LopHocs = new EntitySet<HocSinh_LopHoc>(new Action<HocSinh_LopHoc>(this.attach_HocSinh_LopHocs), new Action<HocSinh_LopHoc>(this.detach_HocSinh_LopHocs));
			this._KetQuas = new EntitySet<KetQua>(new Action<KetQua>(this.attach_KetQuas), new Action<KetQua>(this.detach_KetQuas));
			this._PhieuBienNhanBieuHiens = new EntitySet<PhieuBienNhanBieuHien>(new Action<PhieuBienNhanBieuHien>(this.attach_PhieuBienNhanBieuHiens), new Action<PhieuBienNhanBieuHien>(this.detach_PhieuBienNhanBieuHiens));
			this._PhieuBienNhanHs = new EntitySet<PhieuBienNhanH>(new Action<PhieuBienNhanH>(this.attach_PhieuBienNhanHs), new Action<PhieuBienNhanH>(this.detach_PhieuBienNhanHs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaHS", DbType="Char(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaHS
		{
			get
			{
				return this._MaHS;
			}
			set
			{
				if ((this._MaHS != value))
				{
					this.OnMaHSChanging(value);
					this.SendPropertyChanging();
					this._MaHS = value;
					this.SendPropertyChanged("MaHS");
					this.OnMaHSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenHS", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string TenHS
		{
			get
			{
				return this._TenHS;
			}
			set
			{
				if ((this._TenHS != value))
				{
					this.OnTenHSChanging(value);
					this.SendPropertyChanging();
					this._TenHS = value;
					this.SendPropertyChanged("TenHS");
					this.OnTenHSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CCCD", DbType="Char(12) NOT NULL", CanBeNull=false)]
		public string CCCD
		{
			get
			{
				return this._CCCD;
			}
			set
			{
				if ((this._CCCD != value))
				{
					this.OnCCCDChanging(value);
					this.SendPropertyChanging();
					this._CCCD = value;
					this.SendPropertyChanged("CCCD");
					this.OnCCCDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiaChi", DbType="NVarChar(MAX)")]
		public string DiaChi
		{
			get
			{
				return this._DiaChi;
			}
			set
			{
				if ((this._DiaChi != value))
				{
					this.OnDiaChiChanging(value);
					this.SendPropertyChanging();
					this._DiaChi = value;
					this.SendPropertyChanged("DiaChi");
					this.OnDiaChiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgaySinh", DbType="Date NOT NULL")]
		public System.DateTime NgaySinh
		{
			get
			{
				return this._NgaySinh;
			}
			set
			{
				if ((this._NgaySinh != value))
				{
					this.OnNgaySinhChanging(value);
					this.SendPropertyChanging();
					this._NgaySinh = value;
					this.SendPropertyChanged("NgaySinh");
					this.OnNgaySinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GioiTinh", DbType="Bit NOT NULL")]
		public bool GioiTinh
		{
			get
			{
				return this._GioiTinh;
			}
			set
			{
				if ((this._GioiTinh != value))
				{
					this.OnGioiTinhChanging(value);
					this.SendPropertyChanging();
					this._GioiTinh = value;
					this.SendPropertyChanged("GioiTinh");
					this.OnGioiTinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoDienThoai", DbType="Char(10)")]
		public string SoDienThoai
		{
			get
			{
				return this._SoDienThoai;
			}
			set
			{
				if ((this._SoDienThoai != value))
				{
					this.OnSoDienThoaiChanging(value);
					this.SendPropertyChanging();
					this._SoDienThoai = value;
					this.SendPropertyChanged("SoDienThoai");
					this.OnSoDienThoaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HOCSINH_GiayXacNhanNhapHoc", Storage="_GiayXacNhanNhapHoc", ThisKey="MaHS", OtherKey="MaHS", IsUnique=true, IsForeignKey=false)]
		public GiayXacNhanNhapHoc GiayXacNhanNhapHoc
		{
			get
			{
				return this._GiayXacNhanNhapHoc.Entity;
			}
			set
			{
				GiayXacNhanNhapHoc previousValue = this._GiayXacNhanNhapHoc.Entity;
				if (((previousValue != value) 
							|| (this._GiayXacNhanNhapHoc.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._GiayXacNhanNhapHoc.Entity = null;
						previousValue.HOCSINH = null;
					}
					this._GiayXacNhanNhapHoc.Entity = value;
					if ((value != null))
					{
						value.HOCSINH = this;
					}
					this.SendPropertyChanged("GiayXacNhanNhapHoc");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HOCSINH_HoaDon", Storage="_HoaDons", ThisKey="MaHS", OtherKey="MaHS")]
		public EntitySet<HoaDon> HoaDons
		{
			get
			{
				return this._HoaDons;
			}
			set
			{
				this._HoaDons.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HOCSINH_HocSinh_LopHoc", Storage="_HocSinh_LopHocs", ThisKey="MaHS", OtherKey="MaHS")]
		public EntitySet<HocSinh_LopHoc> HocSinh_LopHocs
		{
			get
			{
				return this._HocSinh_LopHocs;
			}
			set
			{
				this._HocSinh_LopHocs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HOCSINH_KetQua", Storage="_KetQuas", ThisKey="MaHS", OtherKey="MaHS")]
		public EntitySet<KetQua> KetQuas
		{
			get
			{
				return this._KetQuas;
			}
			set
			{
				this._KetQuas.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HOCSINH_PhieuBienNhanBieuHien", Storage="_PhieuBienNhanBieuHiens", ThisKey="MaHS", OtherKey="MaHS")]
		public EntitySet<PhieuBienNhanBieuHien> PhieuBienNhanBieuHiens
		{
			get
			{
				return this._PhieuBienNhanBieuHiens;
			}
			set
			{
				this._PhieuBienNhanBieuHiens.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HOCSINH_PhieuBienNhanH", Storage="_PhieuBienNhanHs", ThisKey="MaHS", OtherKey="MaHS")]
		public EntitySet<PhieuBienNhanH> PhieuBienNhanHs
		{
			get
			{
				return this._PhieuBienNhanHs;
			}
			set
			{
				this._PhieuBienNhanHs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_HoaDons(HoaDon entity)
		{
			this.SendPropertyChanging();
			entity.HOCSINH = this;
		}
		
		private void detach_HoaDons(HoaDon entity)
		{
			this.SendPropertyChanging();
			entity.HOCSINH = null;
		}
		
		private void attach_HocSinh_LopHocs(HocSinh_LopHoc entity)
		{
			this.SendPropertyChanging();
			entity.HOCSINH = this;
		}
		
		private void detach_HocSinh_LopHocs(HocSinh_LopHoc entity)
		{
			this.SendPropertyChanging();
			entity.HOCSINH = null;
		}
		
		private void attach_KetQuas(KetQua entity)
		{
			this.SendPropertyChanging();
			entity.HOCSINH = this;
		}
		
		private void detach_KetQuas(KetQua entity)
		{
			this.SendPropertyChanging();
			entity.HOCSINH = null;
		}
		
		private void attach_PhieuBienNhanBieuHiens(PhieuBienNhanBieuHien entity)
		{
			this.SendPropertyChanging();
			entity.HOCSINH = this;
		}
		
		private void detach_PhieuBienNhanBieuHiens(PhieuBienNhanBieuHien entity)
		{
			this.SendPropertyChanging();
			entity.HOCSINH = null;
		}
		
		private void attach_PhieuBienNhanHs(PhieuBienNhanH entity)
		{
			this.SendPropertyChanging();
			entity.HOCSINH = this;
		}
		
		private void detach_PhieuBienNhanHs(PhieuBienNhanH entity)
		{
			this.SendPropertyChanging();
			entity.HOCSINH = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HocSinh_LopHoc")]
	public partial class HocSinh_LopHoc : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaHS;
		
		private string _MaLop;
		
		private int _DiemHanhKiem;
		
		private EntityRef<HOCSINH> _HOCSINH;
		
		private EntityRef<LopHoc> _LopHoc;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaHSChanging(string value);
    partial void OnMaHSChanged();
    partial void OnMaLopChanging(string value);
    partial void OnMaLopChanged();
    partial void OnDiemHanhKiemChanging(int value);
    partial void OnDiemHanhKiemChanged();
    #endregion
		
		public HocSinh_LopHoc()
		{
			this._HOCSINH = default(EntityRef<HOCSINH>);
			this._LopHoc = default(EntityRef<LopHoc>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaHS", DbType="Char(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaHS
		{
			get
			{
				return this._MaHS;
			}
			set
			{
				if ((this._MaHS != value))
				{
					if (this._HOCSINH.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaHSChanging(value);
					this.SendPropertyChanging();
					this._MaHS = value;
					this.SendPropertyChanged("MaHS");
					this.OnMaHSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaLop", DbType="Char(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaLop
		{
			get
			{
				return this._MaLop;
			}
			set
			{
				if ((this._MaLop != value))
				{
					if (this._LopHoc.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaLopChanging(value);
					this.SendPropertyChanging();
					this._MaLop = value;
					this.SendPropertyChanged("MaLop");
					this.OnMaLopChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiemHanhKiem", DbType="Int NOT NULL")]
		public int DiemHanhKiem
		{
			get
			{
				return this._DiemHanhKiem;
			}
			set
			{
				if ((this._DiemHanhKiem != value))
				{
					this.OnDiemHanhKiemChanging(value);
					this.SendPropertyChanging();
					this._DiemHanhKiem = value;
					this.SendPropertyChanged("DiemHanhKiem");
					this.OnDiemHanhKiemChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HOCSINH_HocSinh_LopHoc", Storage="_HOCSINH", ThisKey="MaHS", OtherKey="MaHS", IsForeignKey=true)]
		public HOCSINH HOCSINH
		{
			get
			{
				return this._HOCSINH.Entity;
			}
			set
			{
				HOCSINH previousValue = this._HOCSINH.Entity;
				if (((previousValue != value) 
							|| (this._HOCSINH.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HOCSINH.Entity = null;
						previousValue.HocSinh_LopHocs.Remove(this);
					}
					this._HOCSINH.Entity = value;
					if ((value != null))
					{
						value.HocSinh_LopHocs.Add(this);
						this._MaHS = value.MaHS;
					}
					else
					{
						this._MaHS = default(string);
					}
					this.SendPropertyChanged("HOCSINH");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LopHoc_HocSinh_LopHoc", Storage="_LopHoc", ThisKey="MaLop", OtherKey="MaLop", IsForeignKey=true)]
		public LopHoc LopHoc
		{
			get
			{
				return this._LopHoc.Entity;
			}
			set
			{
				LopHoc previousValue = this._LopHoc.Entity;
				if (((previousValue != value) 
							|| (this._LopHoc.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LopHoc.Entity = null;
						previousValue.HocSinh_LopHocs.Remove(this);
					}
					this._LopHoc.Entity = value;
					if ((value != null))
					{
						value.HocSinh_LopHocs.Add(this);
						this._MaLop = value.MaLop;
					}
					else
					{
						this._MaLop = default(string);
					}
					this.SendPropertyChanged("LopHoc");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HoSo")]
	public partial class HoSo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaHoSo;
		
		private string _TenHoSo;
		
		private System.Nullable<int> _SoLuongToiDa;
		
		private string _GhiChu;
		
		private EntitySet<CTPhieuBienNhanH> _CTPhieuBienNhanHs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaHoSoChanging(string value);
    partial void OnMaHoSoChanged();
    partial void OnTenHoSoChanging(string value);
    partial void OnTenHoSoChanged();
    partial void OnSoLuongToiDaChanging(System.Nullable<int> value);
    partial void OnSoLuongToiDaChanged();
    partial void OnGhiChuChanging(string value);
    partial void OnGhiChuChanged();
    #endregion
		
		public HoSo()
		{
			this._CTPhieuBienNhanHs = new EntitySet<CTPhieuBienNhanH>(new Action<CTPhieuBienNhanH>(this.attach_CTPhieuBienNhanHs), new Action<CTPhieuBienNhanH>(this.detach_CTPhieuBienNhanHs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaHoSo", DbType="Char(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaHoSo
		{
			get
			{
				return this._MaHoSo;
			}
			set
			{
				if ((this._MaHoSo != value))
				{
					this.OnMaHoSoChanging(value);
					this.SendPropertyChanging();
					this._MaHoSo = value;
					this.SendPropertyChanged("MaHoSo");
					this.OnMaHoSoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenHoSo", DbType="NVarChar(50)")]
		public string TenHoSo
		{
			get
			{
				return this._TenHoSo;
			}
			set
			{
				if ((this._TenHoSo != value))
				{
					this.OnTenHoSoChanging(value);
					this.SendPropertyChanging();
					this._TenHoSo = value;
					this.SendPropertyChanged("TenHoSo");
					this.OnTenHoSoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoLuongToiDa", DbType="Int")]
		public System.Nullable<int> SoLuongToiDa
		{
			get
			{
				return this._SoLuongToiDa;
			}
			set
			{
				if ((this._SoLuongToiDa != value))
				{
					this.OnSoLuongToiDaChanging(value);
					this.SendPropertyChanging();
					this._SoLuongToiDa = value;
					this.SendPropertyChanged("SoLuongToiDa");
					this.OnSoLuongToiDaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GhiChu", DbType="NVarChar(100)")]
		public string GhiChu
		{
			get
			{
				return this._GhiChu;
			}
			set
			{
				if ((this._GhiChu != value))
				{
					this.OnGhiChuChanging(value);
					this.SendPropertyChanging();
					this._GhiChu = value;
					this.SendPropertyChanged("GhiChu");
					this.OnGhiChuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HoSo_CTPhieuBienNhanH", Storage="_CTPhieuBienNhanHs", ThisKey="MaHoSo", OtherKey="MaHoSo")]
		public EntitySet<CTPhieuBienNhanH> CTPhieuBienNhanHs
		{
			get
			{
				return this._CTPhieuBienNhanHs;
			}
			set
			{
				this._CTPhieuBienNhanHs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CTPhieuBienNhanHs(CTPhieuBienNhanH entity)
		{
			this.SendPropertyChanging();
			entity.HoSo = this;
		}
		
		private void detach_CTPhieuBienNhanHs(CTPhieuBienNhanH entity)
		{
			this.SendPropertyChanging();
			entity.HoSo = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HSChoNhapHoc")]
	public partial class HSChoNhapHoc : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Ma;
		
		private string _Ten;
		
		private string _CCCD;
		
		private string _DiaChi;
		
		private string _SoDienThoai;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaChanging(string value);
    partial void OnMaChanged();
    partial void OnTenChanging(string value);
    partial void OnTenChanged();
    partial void OnCCCDChanging(string value);
    partial void OnCCCDChanged();
    partial void OnDiaChiChanging(string value);
    partial void OnDiaChiChanged();
    partial void OnSoDienThoaiChanging(string value);
    partial void OnSoDienThoaiChanged();
    #endregion
		
		public HSChoNhapHoc()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ma", DbType="Char(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Ma
		{
			get
			{
				return this._Ma;
			}
			set
			{
				if ((this._Ma != value))
				{
					this.OnMaChanging(value);
					this.SendPropertyChanging();
					this._Ma = value;
					this.SendPropertyChanged("Ma");
					this.OnMaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ten", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Ten
		{
			get
			{
				return this._Ten;
			}
			set
			{
				if ((this._Ten != value))
				{
					this.OnTenChanging(value);
					this.SendPropertyChanging();
					this._Ten = value;
					this.SendPropertyChanged("Ten");
					this.OnTenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CCCD", DbType="Char(12) NOT NULL", CanBeNull=false)]
		public string CCCD
		{
			get
			{
				return this._CCCD;
			}
			set
			{
				if ((this._CCCD != value))
				{
					this.OnCCCDChanging(value);
					this.SendPropertyChanging();
					this._CCCD = value;
					this.SendPropertyChanged("CCCD");
					this.OnCCCDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiaChi", DbType="NVarChar(50)")]
		public string DiaChi
		{
			get
			{
				return this._DiaChi;
			}
			set
			{
				if ((this._DiaChi != value))
				{
					this.OnDiaChiChanging(value);
					this.SendPropertyChanging();
					this._DiaChi = value;
					this.SendPropertyChanged("DiaChi");
					this.OnDiaChiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoDienThoai", DbType="Char(10)")]
		public string SoDienThoai
		{
			get
			{
				return this._SoDienThoai;
			}
			set
			{
				if ((this._SoDienThoai != value))
				{
					this.OnSoDienThoaiChanging(value);
					this.SendPropertyChanging();
					this._SoDienThoai = value;
					this.SendPropertyChanged("SoDienThoai");
					this.OnSoDienThoaiChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.KetQua")]
	public partial class KetQua : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaHS;
		
		private string _MaLoaiKT;
		
		private string _MaHocKy;
		
		private string _MaLop;
		
		private string _MaMon;
		
		private decimal _Diem;
		
		private EntityRef<HocKy> _HocKy;
		
		private EntityRef<HOCSINH> _HOCSINH;
		
		private EntityRef<LoaiKiemTra> _LoaiKiemTra;
		
		private EntityRef<LopHoc_MonHoc> _LopHoc_MonHoc;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaHSChanging(string value);
    partial void OnMaHSChanged();
    partial void OnMaLoaiKTChanging(string value);
    partial void OnMaLoaiKTChanged();
    partial void OnMaHocKyChanging(string value);
    partial void OnMaHocKyChanged();
    partial void OnMaLopChanging(string value);
    partial void OnMaLopChanged();
    partial void OnMaMonChanging(string value);
    partial void OnMaMonChanged();
    partial void OnDiemChanging(decimal value);
    partial void OnDiemChanged();
    #endregion
		
		public KetQua()
		{
			this._HocKy = default(EntityRef<HocKy>);
			this._HOCSINH = default(EntityRef<HOCSINH>);
			this._LoaiKiemTra = default(EntityRef<LoaiKiemTra>);
			this._LopHoc_MonHoc = default(EntityRef<LopHoc_MonHoc>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaHS", DbType="Char(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaHS
		{
			get
			{
				return this._MaHS;
			}
			set
			{
				if ((this._MaHS != value))
				{
					if (this._HOCSINH.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaHSChanging(value);
					this.SendPropertyChanging();
					this._MaHS = value;
					this.SendPropertyChanged("MaHS");
					this.OnMaHSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaLoaiKT", DbType="Char(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaLoaiKT
		{
			get
			{
				return this._MaLoaiKT;
			}
			set
			{
				if ((this._MaLoaiKT != value))
				{
					if (this._LoaiKiemTra.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaLoaiKTChanging(value);
					this.SendPropertyChanging();
					this._MaLoaiKT = value;
					this.SendPropertyChanged("MaLoaiKT");
					this.OnMaLoaiKTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaHocKy", DbType="Char(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaHocKy
		{
			get
			{
				return this._MaHocKy;
			}
			set
			{
				if ((this._MaHocKy != value))
				{
					if (this._HocKy.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaHocKyChanging(value);
					this.SendPropertyChanging();
					this._MaHocKy = value;
					this.SendPropertyChanged("MaHocKy");
					this.OnMaHocKyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaLop", DbType="Char(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaLop
		{
			get
			{
				return this._MaLop;
			}
			set
			{
				if ((this._MaLop != value))
				{
					if (this._LopHoc_MonHoc.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaLopChanging(value);
					this.SendPropertyChanging();
					this._MaLop = value;
					this.SendPropertyChanged("MaLop");
					this.OnMaLopChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaMon", DbType="Char(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaMon
		{
			get
			{
				return this._MaMon;
			}
			set
			{
				if ((this._MaMon != value))
				{
					if (this._LopHoc_MonHoc.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaMonChanging(value);
					this.SendPropertyChanging();
					this._MaMon = value;
					this.SendPropertyChanged("MaMon");
					this.OnMaMonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Diem", DbType="Decimal(18,0) NOT NULL")]
		public decimal Diem
		{
			get
			{
				return this._Diem;
			}
			set
			{
				if ((this._Diem != value))
				{
					this.OnDiemChanging(value);
					this.SendPropertyChanging();
					this._Diem = value;
					this.SendPropertyChanged("Diem");
					this.OnDiemChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HocKy_KetQua", Storage="_HocKy", ThisKey="MaHocKy", OtherKey="MaHocKy", IsForeignKey=true)]
		public HocKy HocKy
		{
			get
			{
				return this._HocKy.Entity;
			}
			set
			{
				HocKy previousValue = this._HocKy.Entity;
				if (((previousValue != value) 
							|| (this._HocKy.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HocKy.Entity = null;
						previousValue.KetQuas.Remove(this);
					}
					this._HocKy.Entity = value;
					if ((value != null))
					{
						value.KetQuas.Add(this);
						this._MaHocKy = value.MaHocKy;
					}
					else
					{
						this._MaHocKy = default(string);
					}
					this.SendPropertyChanged("HocKy");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HOCSINH_KetQua", Storage="_HOCSINH", ThisKey="MaHS", OtherKey="MaHS", IsForeignKey=true)]
		public HOCSINH HOCSINH
		{
			get
			{
				return this._HOCSINH.Entity;
			}
			set
			{
				HOCSINH previousValue = this._HOCSINH.Entity;
				if (((previousValue != value) 
							|| (this._HOCSINH.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HOCSINH.Entity = null;
						previousValue.KetQuas.Remove(this);
					}
					this._HOCSINH.Entity = value;
					if ((value != null))
					{
						value.KetQuas.Add(this);
						this._MaHS = value.MaHS;
					}
					else
					{
						this._MaHS = default(string);
					}
					this.SendPropertyChanged("HOCSINH");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LoaiKiemTra_KetQua", Storage="_LoaiKiemTra", ThisKey="MaLoaiKT", OtherKey="MaLoai", IsForeignKey=true)]
		public LoaiKiemTra LoaiKiemTra
		{
			get
			{
				return this._LoaiKiemTra.Entity;
			}
			set
			{
				LoaiKiemTra previousValue = this._LoaiKiemTra.Entity;
				if (((previousValue != value) 
							|| (this._LoaiKiemTra.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LoaiKiemTra.Entity = null;
						previousValue.KetQuas.Remove(this);
					}
					this._LoaiKiemTra.Entity = value;
					if ((value != null))
					{
						value.KetQuas.Add(this);
						this._MaLoaiKT = value.MaLoai;
					}
					else
					{
						this._MaLoaiKT = default(string);
					}
					this.SendPropertyChanged("LoaiKiemTra");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LopHoc_MonHoc_KetQua", Storage="_LopHoc_MonHoc", ThisKey="MaLop,MaMon", OtherKey="MaLop,MaMon", IsForeignKey=true)]
		public LopHoc_MonHoc LopHoc_MonHoc
		{
			get
			{
				return this._LopHoc_MonHoc.Entity;
			}
			set
			{
				LopHoc_MonHoc previousValue = this._LopHoc_MonHoc.Entity;
				if (((previousValue != value) 
							|| (this._LopHoc_MonHoc.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LopHoc_MonHoc.Entity = null;
						previousValue.KetQuas.Remove(this);
					}
					this._LopHoc_MonHoc.Entity = value;
					if ((value != null))
					{
						value.KetQuas.Add(this);
						this._MaLop = value.MaLop;
						this._MaMon = value.MaMon;
					}
					else
					{
						this._MaLop = default(string);
						this._MaMon = default(string);
					}
					this.SendPropertyChanged("LopHoc_MonHoc");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Khoi")]
	public partial class Khoi : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaKhoi;
		
		private string _TenKhoi;
		
		private EntitySet<HocPhi> _HocPhis;
		
		private EntitySet<LopHoc> _LopHocs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaKhoiChanging(string value);
    partial void OnMaKhoiChanged();
    partial void OnTenKhoiChanging(string value);
    partial void OnTenKhoiChanged();
    #endregion
		
		public Khoi()
		{
			this._HocPhis = new EntitySet<HocPhi>(new Action<HocPhi>(this.attach_HocPhis), new Action<HocPhi>(this.detach_HocPhis));
			this._LopHocs = new EntitySet<LopHoc>(new Action<LopHoc>(this.attach_LopHocs), new Action<LopHoc>(this.detach_LopHocs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaKhoi", DbType="Char(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaKhoi
		{
			get
			{
				return this._MaKhoi;
			}
			set
			{
				if ((this._MaKhoi != value))
				{
					this.OnMaKhoiChanging(value);
					this.SendPropertyChanging();
					this._MaKhoi = value;
					this.SendPropertyChanged("MaKhoi");
					this.OnMaKhoiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenKhoi", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string TenKhoi
		{
			get
			{
				return this._TenKhoi;
			}
			set
			{
				if ((this._TenKhoi != value))
				{
					this.OnTenKhoiChanging(value);
					this.SendPropertyChanging();
					this._TenKhoi = value;
					this.SendPropertyChanged("TenKhoi");
					this.OnTenKhoiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Khoi_HocPhi", Storage="_HocPhis", ThisKey="MaKhoi", OtherKey="MaKhoi")]
		public EntitySet<HocPhi> HocPhis
		{
			get
			{
				return this._HocPhis;
			}
			set
			{
				this._HocPhis.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Khoi_LopHoc", Storage="_LopHocs", ThisKey="MaKhoi", OtherKey="Khoi")]
		public EntitySet<LopHoc> LopHocs
		{
			get
			{
				return this._LopHocs;
			}
			set
			{
				this._LopHocs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_HocPhis(HocPhi entity)
		{
			this.SendPropertyChanging();
			entity.Khoi = this;
		}
		
		private void detach_HocPhis(HocPhi entity)
		{
			this.SendPropertyChanging();
			entity.Khoi = null;
		}
		
		private void attach_LopHocs(LopHoc entity)
		{
			this.SendPropertyChanging();
			entity.Khoi1 = this;
		}
		
		private void detach_LopHocs(LopHoc entity)
		{
			this.SendPropertyChanging();
			entity.Khoi1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LoaiKiemTra")]
	public partial class LoaiKiemTra : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaLoai;
		
		private string _TenLoai;
		
		private double _HeSo;
		
		private EntitySet<KetQua> _KetQuas;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaLoaiChanging(string value);
    partial void OnMaLoaiChanged();
    partial void OnTenLoaiChanging(string value);
    partial void OnTenLoaiChanged();
    partial void OnHeSoChanging(double value);
    partial void OnHeSoChanged();
    #endregion
		
		public LoaiKiemTra()
		{
			this._KetQuas = new EntitySet<KetQua>(new Action<KetQua>(this.attach_KetQuas), new Action<KetQua>(this.detach_KetQuas));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaLoai", DbType="Char(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaLoai
		{
			get
			{
				return this._MaLoai;
			}
			set
			{
				if ((this._MaLoai != value))
				{
					this.OnMaLoaiChanging(value);
					this.SendPropertyChanging();
					this._MaLoai = value;
					this.SendPropertyChanged("MaLoai");
					this.OnMaLoaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenLoai", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string TenLoai
		{
			get
			{
				return this._TenLoai;
			}
			set
			{
				if ((this._TenLoai != value))
				{
					this.OnTenLoaiChanging(value);
					this.SendPropertyChanging();
					this._TenLoai = value;
					this.SendPropertyChanged("TenLoai");
					this.OnTenLoaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HeSo", DbType="Float NOT NULL")]
		public double HeSo
		{
			get
			{
				return this._HeSo;
			}
			set
			{
				if ((this._HeSo != value))
				{
					this.OnHeSoChanging(value);
					this.SendPropertyChanging();
					this._HeSo = value;
					this.SendPropertyChanged("HeSo");
					this.OnHeSoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LoaiKiemTra_KetQua", Storage="_KetQuas", ThisKey="MaLoai", OtherKey="MaLoaiKT")]
		public EntitySet<KetQua> KetQuas
		{
			get
			{
				return this._KetQuas;
			}
			set
			{
				this._KetQuas.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_KetQuas(KetQua entity)
		{
			this.SendPropertyChanging();
			entity.LoaiKiemTra = this;
		}
		
		private void detach_KetQuas(KetQua entity)
		{
			this.SendPropertyChanging();
			entity.LoaiKiemTra = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LoaiNhanVien")]
	public partial class LoaiNhanVien : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaLoai;
		
		private string _TenLoai;
		
		private EntitySet<NhanVien> _NhanViens;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaLoaiChanging(string value);
    partial void OnMaLoaiChanged();
    partial void OnTenLoaiChanging(string value);
    partial void OnTenLoaiChanged();
    #endregion
		
		public LoaiNhanVien()
		{
			this._NhanViens = new EntitySet<NhanVien>(new Action<NhanVien>(this.attach_NhanViens), new Action<NhanVien>(this.detach_NhanViens));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaLoai", DbType="Char(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaLoai
		{
			get
			{
				return this._MaLoai;
			}
			set
			{
				if ((this._MaLoai != value))
				{
					this.OnMaLoaiChanging(value);
					this.SendPropertyChanging();
					this._MaLoai = value;
					this.SendPropertyChanged("MaLoai");
					this.OnMaLoaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenLoai", DbType="NVarChar(50)")]
		public string TenLoai
		{
			get
			{
				return this._TenLoai;
			}
			set
			{
				if ((this._TenLoai != value))
				{
					this.OnTenLoaiChanging(value);
					this.SendPropertyChanging();
					this._TenLoai = value;
					this.SendPropertyChanged("TenLoai");
					this.OnTenLoaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LoaiNhanVien_NhanVien", Storage="_NhanViens", ThisKey="MaLoai", OtherKey="MaLoai")]
		public EntitySet<NhanVien> NhanViens
		{
			get
			{
				return this._NhanViens;
			}
			set
			{
				this._NhanViens.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_NhanViens(NhanVien entity)
		{
			this.SendPropertyChanging();
			entity.LoaiNhanVien = this;
		}
		
		private void detach_NhanViens(NhanVien entity)
		{
			this.SendPropertyChanging();
			entity.LoaiNhanVien = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LopHoc")]
	public partial class LopHoc : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaLop;
		
		private string _TenLop;
		
		private string _Khoi;
		
		private string _NamHoc;
		
		private string _GiaoVienCN;
		
		private EntitySet<HocSinh_LopHoc> _HocSinh_LopHocs;
		
		private EntitySet<LopHoc_MonHoc> _LopHoc_MonHocs;
		
		private EntityRef<GiaoVien> _GiaoVien;
		
		private EntityRef<Khoi> _Khoi1;
		
		private EntityRef<NamHoc> _NamHoc1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaLopChanging(string value);
    partial void OnMaLopChanged();
    partial void OnTenLopChanging(string value);
    partial void OnTenLopChanged();
    partial void OnKhoiChanging(string value);
    partial void OnKhoiChanged();
    partial void OnNamHocChanging(string value);
    partial void OnNamHocChanged();
    partial void OnGiaoVienCNChanging(string value);
    partial void OnGiaoVienCNChanged();
    #endregion
		
		public LopHoc()
		{
			this._HocSinh_LopHocs = new EntitySet<HocSinh_LopHoc>(new Action<HocSinh_LopHoc>(this.attach_HocSinh_LopHocs), new Action<HocSinh_LopHoc>(this.detach_HocSinh_LopHocs));
			this._LopHoc_MonHocs = new EntitySet<LopHoc_MonHoc>(new Action<LopHoc_MonHoc>(this.attach_LopHoc_MonHocs), new Action<LopHoc_MonHoc>(this.detach_LopHoc_MonHocs));
			this._GiaoVien = default(EntityRef<GiaoVien>);
			this._Khoi1 = default(EntityRef<Khoi>);
			this._NamHoc1 = default(EntityRef<NamHoc>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaLop", DbType="Char(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaLop
		{
			get
			{
				return this._MaLop;
			}
			set
			{
				if ((this._MaLop != value))
				{
					this.OnMaLopChanging(value);
					this.SendPropertyChanging();
					this._MaLop = value;
					this.SendPropertyChanged("MaLop");
					this.OnMaLopChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenLop", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string TenLop
		{
			get
			{
				return this._TenLop;
			}
			set
			{
				if ((this._TenLop != value))
				{
					this.OnTenLopChanging(value);
					this.SendPropertyChanging();
					this._TenLop = value;
					this.SendPropertyChanged("TenLop");
					this.OnTenLopChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Khoi", DbType="Char(10) NOT NULL", CanBeNull=false)]
		public string Khoi
		{
			get
			{
				return this._Khoi;
			}
			set
			{
				if ((this._Khoi != value))
				{
					if (this._Khoi1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnKhoiChanging(value);
					this.SendPropertyChanging();
					this._Khoi = value;
					this.SendPropertyChanged("Khoi");
					this.OnKhoiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NamHoc", DbType="Char(10) NOT NULL", CanBeNull=false)]
		public string NamHoc
		{
			get
			{
				return this._NamHoc;
			}
			set
			{
				if ((this._NamHoc != value))
				{
					if (this._NamHoc1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnNamHocChanging(value);
					this.SendPropertyChanging();
					this._NamHoc = value;
					this.SendPropertyChanged("NamHoc");
					this.OnNamHocChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GiaoVienCN", DbType="Char(10)")]
		public string GiaoVienCN
		{
			get
			{
				return this._GiaoVienCN;
			}
			set
			{
				if ((this._GiaoVienCN != value))
				{
					if (this._GiaoVien.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnGiaoVienCNChanging(value);
					this.SendPropertyChanging();
					this._GiaoVienCN = value;
					this.SendPropertyChanged("GiaoVienCN");
					this.OnGiaoVienCNChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LopHoc_HocSinh_LopHoc", Storage="_HocSinh_LopHocs", ThisKey="MaLop", OtherKey="MaLop")]
		public EntitySet<HocSinh_LopHoc> HocSinh_LopHocs
		{
			get
			{
				return this._HocSinh_LopHocs;
			}
			set
			{
				this._HocSinh_LopHocs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LopHoc_LopHoc_MonHoc", Storage="_LopHoc_MonHocs", ThisKey="MaLop", OtherKey="MaLop")]
		public EntitySet<LopHoc_MonHoc> LopHoc_MonHocs
		{
			get
			{
				return this._LopHoc_MonHocs;
			}
			set
			{
				this._LopHoc_MonHocs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GiaoVien_LopHoc", Storage="_GiaoVien", ThisKey="GiaoVienCN", OtherKey="MaNV", IsForeignKey=true)]
		public GiaoVien GiaoVien
		{
			get
			{
				return this._GiaoVien.Entity;
			}
			set
			{
				GiaoVien previousValue = this._GiaoVien.Entity;
				if (((previousValue != value) 
							|| (this._GiaoVien.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._GiaoVien.Entity = null;
						previousValue.LopHocs.Remove(this);
					}
					this._GiaoVien.Entity = value;
					if ((value != null))
					{
						value.LopHocs.Add(this);
						this._GiaoVienCN = value.MaNV;
					}
					else
					{
						this._GiaoVienCN = default(string);
					}
					this.SendPropertyChanged("GiaoVien");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Khoi_LopHoc", Storage="_Khoi1", ThisKey="Khoi", OtherKey="MaKhoi", IsForeignKey=true)]
		public Khoi Khoi1
		{
			get
			{
				return this._Khoi1.Entity;
			}
			set
			{
				Khoi previousValue = this._Khoi1.Entity;
				if (((previousValue != value) 
							|| (this._Khoi1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Khoi1.Entity = null;
						previousValue.LopHocs.Remove(this);
					}
					this._Khoi1.Entity = value;
					if ((value != null))
					{
						value.LopHocs.Add(this);
						this._Khoi = value.MaKhoi;
					}
					else
					{
						this._Khoi = default(string);
					}
					this.SendPropertyChanged("Khoi1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NamHoc_LopHoc", Storage="_NamHoc1", ThisKey="NamHoc", OtherKey="MaNamHoc", IsForeignKey=true)]
		public NamHoc NamHoc1
		{
			get
			{
				return this._NamHoc1.Entity;
			}
			set
			{
				NamHoc previousValue = this._NamHoc1.Entity;
				if (((previousValue != value) 
							|| (this._NamHoc1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NamHoc1.Entity = null;
						previousValue.LopHocs.Remove(this);
					}
					this._NamHoc1.Entity = value;
					if ((value != null))
					{
						value.LopHocs.Add(this);
						this._NamHoc = value.MaNamHoc;
					}
					else
					{
						this._NamHoc = default(string);
					}
					this.SendPropertyChanged("NamHoc1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_HocSinh_LopHocs(HocSinh_LopHoc entity)
		{
			this.SendPropertyChanging();
			entity.LopHoc = this;
		}
		
		private void detach_HocSinh_LopHocs(HocSinh_LopHoc entity)
		{
			this.SendPropertyChanging();
			entity.LopHoc = null;
		}
		
		private void attach_LopHoc_MonHocs(LopHoc_MonHoc entity)
		{
			this.SendPropertyChanging();
			entity.LopHoc = this;
		}
		
		private void detach_LopHoc_MonHocs(LopHoc_MonHoc entity)
		{
			this.SendPropertyChanging();
			entity.LopHoc = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LopHoc_MonHoc")]
	public partial class LopHoc_MonHoc : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaLop;
		
		private string _MaMon;
		
		private string _MaGV;
		
		private EntitySet<KetQua> _KetQuas;
		
		private EntityRef<LopHoc> _LopHoc;
		
		private EntityRef<GiaoVien> _GiaoVien;
		
		private EntityRef<MonHoc> _MonHoc;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaLopChanging(string value);
    partial void OnMaLopChanged();
    partial void OnMaMonChanging(string value);
    partial void OnMaMonChanged();
    partial void OnMaGVChanging(string value);
    partial void OnMaGVChanged();
    #endregion
		
		public LopHoc_MonHoc()
		{
			this._KetQuas = new EntitySet<KetQua>(new Action<KetQua>(this.attach_KetQuas), new Action<KetQua>(this.detach_KetQuas));
			this._LopHoc = default(EntityRef<LopHoc>);
			this._GiaoVien = default(EntityRef<GiaoVien>);
			this._MonHoc = default(EntityRef<MonHoc>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaLop", DbType="Char(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaLop
		{
			get
			{
				return this._MaLop;
			}
			set
			{
				if ((this._MaLop != value))
				{
					if (this._LopHoc.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaLopChanging(value);
					this.SendPropertyChanging();
					this._MaLop = value;
					this.SendPropertyChanged("MaLop");
					this.OnMaLopChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaMon", DbType="Char(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaMon
		{
			get
			{
				return this._MaMon;
			}
			set
			{
				if ((this._MaMon != value))
				{
					if (this._MonHoc.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaMonChanging(value);
					this.SendPropertyChanging();
					this._MaMon = value;
					this.SendPropertyChanged("MaMon");
					this.OnMaMonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaGV", DbType="Char(10) NOT NULL", CanBeNull=false)]
		public string MaGV
		{
			get
			{
				return this._MaGV;
			}
			set
			{
				if ((this._MaGV != value))
				{
					if (this._GiaoVien.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaGVChanging(value);
					this.SendPropertyChanging();
					this._MaGV = value;
					this.SendPropertyChanged("MaGV");
					this.OnMaGVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LopHoc_MonHoc_KetQua", Storage="_KetQuas", ThisKey="MaLop,MaMon", OtherKey="MaLop,MaMon")]
		public EntitySet<KetQua> KetQuas
		{
			get
			{
				return this._KetQuas;
			}
			set
			{
				this._KetQuas.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LopHoc_LopHoc_MonHoc", Storage="_LopHoc", ThisKey="MaLop", OtherKey="MaLop", IsForeignKey=true)]
		public LopHoc LopHoc
		{
			get
			{
				return this._LopHoc.Entity;
			}
			set
			{
				LopHoc previousValue = this._LopHoc.Entity;
				if (((previousValue != value) 
							|| (this._LopHoc.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LopHoc.Entity = null;
						previousValue.LopHoc_MonHocs.Remove(this);
					}
					this._LopHoc.Entity = value;
					if ((value != null))
					{
						value.LopHoc_MonHocs.Add(this);
						this._MaLop = value.MaLop;
					}
					else
					{
						this._MaLop = default(string);
					}
					this.SendPropertyChanged("LopHoc");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GiaoVien_LopHoc_MonHoc", Storage="_GiaoVien", ThisKey="MaGV", OtherKey="MaNV", IsForeignKey=true)]
		public GiaoVien GiaoVien
		{
			get
			{
				return this._GiaoVien.Entity;
			}
			set
			{
				GiaoVien previousValue = this._GiaoVien.Entity;
				if (((previousValue != value) 
							|| (this._GiaoVien.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._GiaoVien.Entity = null;
						previousValue.LopHoc_MonHocs.Remove(this);
					}
					this._GiaoVien.Entity = value;
					if ((value != null))
					{
						value.LopHoc_MonHocs.Add(this);
						this._MaGV = value.MaNV;
					}
					else
					{
						this._MaGV = default(string);
					}
					this.SendPropertyChanged("GiaoVien");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MonHoc_LopHoc_MonHoc", Storage="_MonHoc", ThisKey="MaMon", OtherKey="MaMon", IsForeignKey=true)]
		public MonHoc MonHoc
		{
			get
			{
				return this._MonHoc.Entity;
			}
			set
			{
				MonHoc previousValue = this._MonHoc.Entity;
				if (((previousValue != value) 
							|| (this._MonHoc.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MonHoc.Entity = null;
						previousValue.LopHoc_MonHocs.Remove(this);
					}
					this._MonHoc.Entity = value;
					if ((value != null))
					{
						value.LopHoc_MonHocs.Add(this);
						this._MaMon = value.MaMon;
					}
					else
					{
						this._MaMon = default(string);
					}
					this.SendPropertyChanged("MonHoc");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_KetQuas(KetQua entity)
		{
			this.SendPropertyChanging();
			entity.LopHoc_MonHoc = this;
		}
		
		private void detach_KetQuas(KetQua entity)
		{
			this.SendPropertyChanging();
			entity.LopHoc_MonHoc = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MonHoc")]
	public partial class MonHoc : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaMon;
		
		private string _TenMon;
		
		private EntitySet<GiaoVien> _GiaoViens;
		
		private EntitySet<LopHoc_MonHoc> _LopHoc_MonHocs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaMonChanging(string value);
    partial void OnMaMonChanged();
    partial void OnTenMonChanging(string value);
    partial void OnTenMonChanged();
    #endregion
		
		public MonHoc()
		{
			this._GiaoViens = new EntitySet<GiaoVien>(new Action<GiaoVien>(this.attach_GiaoViens), new Action<GiaoVien>(this.detach_GiaoViens));
			this._LopHoc_MonHocs = new EntitySet<LopHoc_MonHoc>(new Action<LopHoc_MonHoc>(this.attach_LopHoc_MonHocs), new Action<LopHoc_MonHoc>(this.detach_LopHoc_MonHocs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaMon", DbType="Char(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaMon
		{
			get
			{
				return this._MaMon;
			}
			set
			{
				if ((this._MaMon != value))
				{
					this.OnMaMonChanging(value);
					this.SendPropertyChanging();
					this._MaMon = value;
					this.SendPropertyChanged("MaMon");
					this.OnMaMonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenMon", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string TenMon
		{
			get
			{
				return this._TenMon;
			}
			set
			{
				if ((this._TenMon != value))
				{
					this.OnTenMonChanging(value);
					this.SendPropertyChanging();
					this._TenMon = value;
					this.SendPropertyChanged("TenMon");
					this.OnTenMonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MonHoc_GiaoVien", Storage="_GiaoViens", ThisKey="MaMon", OtherKey="MaMon")]
		public EntitySet<GiaoVien> GiaoViens
		{
			get
			{
				return this._GiaoViens;
			}
			set
			{
				this._GiaoViens.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MonHoc_LopHoc_MonHoc", Storage="_LopHoc_MonHocs", ThisKey="MaMon", OtherKey="MaMon")]
		public EntitySet<LopHoc_MonHoc> LopHoc_MonHocs
		{
			get
			{
				return this._LopHoc_MonHocs;
			}
			set
			{
				this._LopHoc_MonHocs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_GiaoViens(GiaoVien entity)
		{
			this.SendPropertyChanging();
			entity.MonHoc = this;
		}
		
		private void detach_GiaoViens(GiaoVien entity)
		{
			this.SendPropertyChanging();
			entity.MonHoc = null;
		}
		
		private void attach_LopHoc_MonHocs(LopHoc_MonHoc entity)
		{
			this.SendPropertyChanging();
			entity.MonHoc = this;
		}
		
		private void detach_LopHoc_MonHocs(LopHoc_MonHoc entity)
		{
			this.SendPropertyChanging();
			entity.MonHoc = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NamHoc")]
	public partial class NamHoc : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaNamHoc;
		
		private string _TenNamHoc;
		
		private EntitySet<HocPhi> _HocPhis;
		
		private EntitySet<LopHoc> _LopHocs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaNamHocChanging(string value);
    partial void OnMaNamHocChanged();
    partial void OnTenNamHocChanging(string value);
    partial void OnTenNamHocChanged();
    #endregion
		
		public NamHoc()
		{
			this._HocPhis = new EntitySet<HocPhi>(new Action<HocPhi>(this.attach_HocPhis), new Action<HocPhi>(this.detach_HocPhis));
			this._LopHocs = new EntitySet<LopHoc>(new Action<LopHoc>(this.attach_LopHocs), new Action<LopHoc>(this.detach_LopHocs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaNamHoc", DbType="Char(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaNamHoc
		{
			get
			{
				return this._MaNamHoc;
			}
			set
			{
				if ((this._MaNamHoc != value))
				{
					this.OnMaNamHocChanging(value);
					this.SendPropertyChanging();
					this._MaNamHoc = value;
					this.SendPropertyChanged("MaNamHoc");
					this.OnMaNamHocChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenNamHoc", DbType="NVarChar(50)")]
		public string TenNamHoc
		{
			get
			{
				return this._TenNamHoc;
			}
			set
			{
				if ((this._TenNamHoc != value))
				{
					this.OnTenNamHocChanging(value);
					this.SendPropertyChanging();
					this._TenNamHoc = value;
					this.SendPropertyChanged("TenNamHoc");
					this.OnTenNamHocChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NamHoc_HocPhi", Storage="_HocPhis", ThisKey="MaNamHoc", OtherKey="MaNamHoc")]
		public EntitySet<HocPhi> HocPhis
		{
			get
			{
				return this._HocPhis;
			}
			set
			{
				this._HocPhis.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NamHoc_LopHoc", Storage="_LopHocs", ThisKey="MaNamHoc", OtherKey="NamHoc")]
		public EntitySet<LopHoc> LopHocs
		{
			get
			{
				return this._LopHocs;
			}
			set
			{
				this._LopHocs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_HocPhis(HocPhi entity)
		{
			this.SendPropertyChanging();
			entity.NamHoc = this;
		}
		
		private void detach_HocPhis(HocPhi entity)
		{
			this.SendPropertyChanging();
			entity.NamHoc = null;
		}
		
		private void attach_LopHocs(LopHoc entity)
		{
			this.SendPropertyChanging();
			entity.NamHoc1 = this;
		}
		
		private void detach_LopHocs(LopHoc entity)
		{
			this.SendPropertyChanging();
			entity.NamHoc1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NhanVien")]
	public partial class NhanVien : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaNV;
		
		private string _TenNV;
		
		private string _MaLoai;
		
		private EntitySet<TaiKhoan> _TaiKhoans;
		
		private EntityRef<GiaoVien> _GiaoVien;
		
		private EntitySet<GiayXacNhanNhapHoc> _GiayXacNhanNhapHocs;
		
		private EntitySet<HoaDon> _HoaDons;
		
		private EntitySet<HoaDon> _HoaDons1;
		
		private EntitySet<PhieuBienNhanH> _PhieuBienNhanHs;
		
		private EntityRef<LoaiNhanVien> _LoaiNhanVien;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaNVChanging(string value);
    partial void OnMaNVChanged();
    partial void OnTenNVChanging(string value);
    partial void OnTenNVChanged();
    partial void OnMaLoaiChanging(string value);
    partial void OnMaLoaiChanged();
    #endregion
		
		public NhanVien()
		{
			this._TaiKhoans = new EntitySet<TaiKhoan>(new Action<TaiKhoan>(this.attach_TaiKhoans), new Action<TaiKhoan>(this.detach_TaiKhoans));
			this._GiaoVien = default(EntityRef<GiaoVien>);
			this._GiayXacNhanNhapHocs = new EntitySet<GiayXacNhanNhapHoc>(new Action<GiayXacNhanNhapHoc>(this.attach_GiayXacNhanNhapHocs), new Action<GiayXacNhanNhapHoc>(this.detach_GiayXacNhanNhapHocs));
			this._HoaDons = new EntitySet<HoaDon>(new Action<HoaDon>(this.attach_HoaDons), new Action<HoaDon>(this.detach_HoaDons));
			this._HoaDons1 = new EntitySet<HoaDon>(new Action<HoaDon>(this.attach_HoaDons1), new Action<HoaDon>(this.detach_HoaDons1));
			this._PhieuBienNhanHs = new EntitySet<PhieuBienNhanH>(new Action<PhieuBienNhanH>(this.attach_PhieuBienNhanHs), new Action<PhieuBienNhanH>(this.detach_PhieuBienNhanHs));
			this._LoaiNhanVien = default(EntityRef<LoaiNhanVien>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaNV", DbType="Char(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaNV
		{
			get
			{
				return this._MaNV;
			}
			set
			{
				if ((this._MaNV != value))
				{
					this.OnMaNVChanging(value);
					this.SendPropertyChanging();
					this._MaNV = value;
					this.SendPropertyChanged("MaNV");
					this.OnMaNVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenNV", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string TenNV
		{
			get
			{
				return this._TenNV;
			}
			set
			{
				if ((this._TenNV != value))
				{
					this.OnTenNVChanging(value);
					this.SendPropertyChanging();
					this._TenNV = value;
					this.SendPropertyChanged("TenNV");
					this.OnTenNVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaLoai", DbType="Char(10)")]
		public string MaLoai
		{
			get
			{
				return this._MaLoai;
			}
			set
			{
				if ((this._MaLoai != value))
				{
					if (this._LoaiNhanVien.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaLoaiChanging(value);
					this.SendPropertyChanging();
					this._MaLoai = value;
					this.SendPropertyChanged("MaLoai");
					this.OnMaLoaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NhanVien_TaiKhoan", Storage="_TaiKhoans", ThisKey="MaNV", OtherKey="MaNV")]
		public EntitySet<TaiKhoan> TaiKhoans
		{
			get
			{
				return this._TaiKhoans;
			}
			set
			{
				this._TaiKhoans.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NhanVien_GiaoVien", Storage="_GiaoVien", ThisKey="MaNV", OtherKey="MaNV", IsUnique=true, IsForeignKey=false)]
		public GiaoVien GiaoVien
		{
			get
			{
				return this._GiaoVien.Entity;
			}
			set
			{
				GiaoVien previousValue = this._GiaoVien.Entity;
				if (((previousValue != value) 
							|| (this._GiaoVien.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._GiaoVien.Entity = null;
						previousValue.NhanVien = null;
					}
					this._GiaoVien.Entity = value;
					if ((value != null))
					{
						value.NhanVien = this;
					}
					this.SendPropertyChanged("GiaoVien");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NhanVien_GiayXacNhanNhapHoc", Storage="_GiayXacNhanNhapHocs", ThisKey="MaNV", OtherKey="MaNV")]
		public EntitySet<GiayXacNhanNhapHoc> GiayXacNhanNhapHocs
		{
			get
			{
				return this._GiayXacNhanNhapHocs;
			}
			set
			{
				this._GiayXacNhanNhapHocs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NhanVien_HoaDon", Storage="_HoaDons", ThisKey="MaNV", OtherKey="MaHocPhi")]
		public EntitySet<HoaDon> HoaDons
		{
			get
			{
				return this._HoaDons;
			}
			set
			{
				this._HoaDons.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NhanVien_HoaDon1", Storage="_HoaDons1", ThisKey="MaNV", OtherKey="MaNV")]
		public EntitySet<HoaDon> HoaDons1
		{
			get
			{
				return this._HoaDons1;
			}
			set
			{
				this._HoaDons1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NhanVien_PhieuBienNhanH", Storage="_PhieuBienNhanHs", ThisKey="MaNV", OtherKey="MaNV")]
		public EntitySet<PhieuBienNhanH> PhieuBienNhanHs
		{
			get
			{
				return this._PhieuBienNhanHs;
			}
			set
			{
				this._PhieuBienNhanHs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LoaiNhanVien_NhanVien", Storage="_LoaiNhanVien", ThisKey="MaLoai", OtherKey="MaLoai", IsForeignKey=true)]
		public LoaiNhanVien LoaiNhanVien
		{
			get
			{
				return this._LoaiNhanVien.Entity;
			}
			set
			{
				LoaiNhanVien previousValue = this._LoaiNhanVien.Entity;
				if (((previousValue != value) 
							|| (this._LoaiNhanVien.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LoaiNhanVien.Entity = null;
						previousValue.NhanViens.Remove(this);
					}
					this._LoaiNhanVien.Entity = value;
					if ((value != null))
					{
						value.NhanViens.Add(this);
						this._MaLoai = value.MaLoai;
					}
					else
					{
						this._MaLoai = default(string);
					}
					this.SendPropertyChanged("LoaiNhanVien");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TaiKhoans(TaiKhoan entity)
		{
			this.SendPropertyChanging();
			entity.NhanVien = this;
		}
		
		private void detach_TaiKhoans(TaiKhoan entity)
		{
			this.SendPropertyChanging();
			entity.NhanVien = null;
		}
		
		private void attach_GiayXacNhanNhapHocs(GiayXacNhanNhapHoc entity)
		{
			this.SendPropertyChanging();
			entity.NhanVien = this;
		}
		
		private void detach_GiayXacNhanNhapHocs(GiayXacNhanNhapHoc entity)
		{
			this.SendPropertyChanging();
			entity.NhanVien = null;
		}
		
		private void attach_HoaDons(HoaDon entity)
		{
			this.SendPropertyChanging();
			entity.NhanVien = this;
		}
		
		private void detach_HoaDons(HoaDon entity)
		{
			this.SendPropertyChanging();
			entity.NhanVien = null;
		}
		
		private void attach_HoaDons1(HoaDon entity)
		{
			this.SendPropertyChanging();
			entity.NhanVien1 = this;
		}
		
		private void detach_HoaDons1(HoaDon entity)
		{
			this.SendPropertyChanging();
			entity.NhanVien1 = null;
		}
		
		private void attach_PhieuBienNhanHs(PhieuBienNhanH entity)
		{
			this.SendPropertyChanging();
			entity.NhanVien = this;
		}
		
		private void detach_PhieuBienNhanHs(PhieuBienNhanH entity)
		{
			this.SendPropertyChanging();
			entity.NhanVien = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PhieuBienNhanBieuHien")]
	public partial class PhieuBienNhanBieuHien : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaPhieu;
		
		private string _MaHS;
		
		private string _MaGV;
		
		private string _MaHanhKiem;
		
		private int _Diem;
		
		private string _GhiChu;
		
		private EntityRef<HanhKiem> _HanhKiem;
		
		private EntityRef<GiaoVien> _GiaoVien;
		
		private EntityRef<HOCSINH> _HOCSINH;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaPhieuChanging(string value);
    partial void OnMaPhieuChanged();
    partial void OnMaHSChanging(string value);
    partial void OnMaHSChanged();
    partial void OnMaGVChanging(string value);
    partial void OnMaGVChanged();
    partial void OnMaHanhKiemChanging(string value);
    partial void OnMaHanhKiemChanged();
    partial void OnDiemChanging(int value);
    partial void OnDiemChanged();
    partial void OnGhiChuChanging(string value);
    partial void OnGhiChuChanged();
    #endregion
		
		public PhieuBienNhanBieuHien()
		{
			this._HanhKiem = default(EntityRef<HanhKiem>);
			this._GiaoVien = default(EntityRef<GiaoVien>);
			this._HOCSINH = default(EntityRef<HOCSINH>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaPhieu", DbType="Char(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaPhieu
		{
			get
			{
				return this._MaPhieu;
			}
			set
			{
				if ((this._MaPhieu != value))
				{
					this.OnMaPhieuChanging(value);
					this.SendPropertyChanging();
					this._MaPhieu = value;
					this.SendPropertyChanged("MaPhieu");
					this.OnMaPhieuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaHS", DbType="Char(10) NOT NULL", CanBeNull=false)]
		public string MaHS
		{
			get
			{
				return this._MaHS;
			}
			set
			{
				if ((this._MaHS != value))
				{
					if (this._HOCSINH.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaHSChanging(value);
					this.SendPropertyChanging();
					this._MaHS = value;
					this.SendPropertyChanged("MaHS");
					this.OnMaHSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaGV", DbType="Char(10) NOT NULL", CanBeNull=false)]
		public string MaGV
		{
			get
			{
				return this._MaGV;
			}
			set
			{
				if ((this._MaGV != value))
				{
					if (this._GiaoVien.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaGVChanging(value);
					this.SendPropertyChanging();
					this._MaGV = value;
					this.SendPropertyChanged("MaGV");
					this.OnMaGVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaHanhKiem", DbType="Char(10) NOT NULL", CanBeNull=false)]
		public string MaHanhKiem
		{
			get
			{
				return this._MaHanhKiem;
			}
			set
			{
				if ((this._MaHanhKiem != value))
				{
					if (this._HanhKiem.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaHanhKiemChanging(value);
					this.SendPropertyChanging();
					this._MaHanhKiem = value;
					this.SendPropertyChanged("MaHanhKiem");
					this.OnMaHanhKiemChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Diem", DbType="Int NOT NULL")]
		public int Diem
		{
			get
			{
				return this._Diem;
			}
			set
			{
				if ((this._Diem != value))
				{
					this.OnDiemChanging(value);
					this.SendPropertyChanging();
					this._Diem = value;
					this.SendPropertyChanged("Diem");
					this.OnDiemChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GhiChu", DbType="NVarChar(50)")]
		public string GhiChu
		{
			get
			{
				return this._GhiChu;
			}
			set
			{
				if ((this._GhiChu != value))
				{
					this.OnGhiChuChanging(value);
					this.SendPropertyChanging();
					this._GhiChu = value;
					this.SendPropertyChanged("GhiChu");
					this.OnGhiChuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HanhKiem_PhieuBienNhanBieuHien", Storage="_HanhKiem", ThisKey="MaHanhKiem", OtherKey="MaHanhKiem", IsForeignKey=true)]
		public HanhKiem HanhKiem
		{
			get
			{
				return this._HanhKiem.Entity;
			}
			set
			{
				HanhKiem previousValue = this._HanhKiem.Entity;
				if (((previousValue != value) 
							|| (this._HanhKiem.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HanhKiem.Entity = null;
						previousValue.PhieuBienNhanBieuHiens.Remove(this);
					}
					this._HanhKiem.Entity = value;
					if ((value != null))
					{
						value.PhieuBienNhanBieuHiens.Add(this);
						this._MaHanhKiem = value.MaHanhKiem;
					}
					else
					{
						this._MaHanhKiem = default(string);
					}
					this.SendPropertyChanged("HanhKiem");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GiaoVien_PhieuBienNhanBieuHien", Storage="_GiaoVien", ThisKey="MaGV", OtherKey="MaNV", IsForeignKey=true)]
		public GiaoVien GiaoVien
		{
			get
			{
				return this._GiaoVien.Entity;
			}
			set
			{
				GiaoVien previousValue = this._GiaoVien.Entity;
				if (((previousValue != value) 
							|| (this._GiaoVien.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._GiaoVien.Entity = null;
						previousValue.PhieuBienNhanBieuHiens.Remove(this);
					}
					this._GiaoVien.Entity = value;
					if ((value != null))
					{
						value.PhieuBienNhanBieuHiens.Add(this);
						this._MaGV = value.MaNV;
					}
					else
					{
						this._MaGV = default(string);
					}
					this.SendPropertyChanged("GiaoVien");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HOCSINH_PhieuBienNhanBieuHien", Storage="_HOCSINH", ThisKey="MaHS", OtherKey="MaHS", IsForeignKey=true)]
		public HOCSINH HOCSINH
		{
			get
			{
				return this._HOCSINH.Entity;
			}
			set
			{
				HOCSINH previousValue = this._HOCSINH.Entity;
				if (((previousValue != value) 
							|| (this._HOCSINH.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HOCSINH.Entity = null;
						previousValue.PhieuBienNhanBieuHiens.Remove(this);
					}
					this._HOCSINH.Entity = value;
					if ((value != null))
					{
						value.PhieuBienNhanBieuHiens.Add(this);
						this._MaHS = value.MaHS;
					}
					else
					{
						this._MaHS = default(string);
					}
					this.SendPropertyChanged("HOCSINH");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PhieuBienNhanHS")]
	public partial class PhieuBienNhanH : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaPhieu;
		
		private System.DateTime _NgayNhan;
		
		private string _MaHS;
		
		private string _MaNV;
		
		private EntitySet<CTPhieuBienNhanH> _CTPhieuBienNhanHs;
		
		private EntityRef<HOCSINH> _HOCSINH;
		
		private EntityRef<NhanVien> _NhanVien;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaPhieuChanging(string value);
    partial void OnMaPhieuChanged();
    partial void OnNgayNhanChanging(System.DateTime value);
    partial void OnNgayNhanChanged();
    partial void OnMaHSChanging(string value);
    partial void OnMaHSChanged();
    partial void OnMaNVChanging(string value);
    partial void OnMaNVChanged();
    #endregion
		
		public PhieuBienNhanH()
		{
			this._CTPhieuBienNhanHs = new EntitySet<CTPhieuBienNhanH>(new Action<CTPhieuBienNhanH>(this.attach_CTPhieuBienNhanHs), new Action<CTPhieuBienNhanH>(this.detach_CTPhieuBienNhanHs));
			this._HOCSINH = default(EntityRef<HOCSINH>);
			this._NhanVien = default(EntityRef<NhanVien>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaPhieu", DbType="Char(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaPhieu
		{
			get
			{
				return this._MaPhieu;
			}
			set
			{
				if ((this._MaPhieu != value))
				{
					this.OnMaPhieuChanging(value);
					this.SendPropertyChanging();
					this._MaPhieu = value;
					this.SendPropertyChanged("MaPhieu");
					this.OnMaPhieuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayNhan", DbType="DateTime NOT NULL")]
		public System.DateTime NgayNhan
		{
			get
			{
				return this._NgayNhan;
			}
			set
			{
				if ((this._NgayNhan != value))
				{
					this.OnNgayNhanChanging(value);
					this.SendPropertyChanging();
					this._NgayNhan = value;
					this.SendPropertyChanged("NgayNhan");
					this.OnNgayNhanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaHS", DbType="Char(10) NOT NULL", CanBeNull=false)]
		public string MaHS
		{
			get
			{
				return this._MaHS;
			}
			set
			{
				if ((this._MaHS != value))
				{
					if (this._HOCSINH.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaHSChanging(value);
					this.SendPropertyChanging();
					this._MaHS = value;
					this.SendPropertyChanged("MaHS");
					this.OnMaHSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaNV", DbType="Char(10) NOT NULL", CanBeNull=false)]
		public string MaNV
		{
			get
			{
				return this._MaNV;
			}
			set
			{
				if ((this._MaNV != value))
				{
					if (this._NhanVien.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaNVChanging(value);
					this.SendPropertyChanging();
					this._MaNV = value;
					this.SendPropertyChanged("MaNV");
					this.OnMaNVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PhieuBienNhanH_CTPhieuBienNhanH", Storage="_CTPhieuBienNhanHs", ThisKey="MaPhieu", OtherKey="MaPhieuBN")]
		public EntitySet<CTPhieuBienNhanH> CTPhieuBienNhanHs
		{
			get
			{
				return this._CTPhieuBienNhanHs;
			}
			set
			{
				this._CTPhieuBienNhanHs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HOCSINH_PhieuBienNhanH", Storage="_HOCSINH", ThisKey="MaHS", OtherKey="MaHS", IsForeignKey=true)]
		public HOCSINH HOCSINH
		{
			get
			{
				return this._HOCSINH.Entity;
			}
			set
			{
				HOCSINH previousValue = this._HOCSINH.Entity;
				if (((previousValue != value) 
							|| (this._HOCSINH.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HOCSINH.Entity = null;
						previousValue.PhieuBienNhanHs.Remove(this);
					}
					this._HOCSINH.Entity = value;
					if ((value != null))
					{
						value.PhieuBienNhanHs.Add(this);
						this._MaHS = value.MaHS;
					}
					else
					{
						this._MaHS = default(string);
					}
					this.SendPropertyChanged("HOCSINH");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NhanVien_PhieuBienNhanH", Storage="_NhanVien", ThisKey="MaNV", OtherKey="MaNV", IsForeignKey=true)]
		public NhanVien NhanVien
		{
			get
			{
				return this._NhanVien.Entity;
			}
			set
			{
				NhanVien previousValue = this._NhanVien.Entity;
				if (((previousValue != value) 
							|| (this._NhanVien.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NhanVien.Entity = null;
						previousValue.PhieuBienNhanHs.Remove(this);
					}
					this._NhanVien.Entity = value;
					if ((value != null))
					{
						value.PhieuBienNhanHs.Add(this);
						this._MaNV = value.MaNV;
					}
					else
					{
						this._MaNV = default(string);
					}
					this.SendPropertyChanged("NhanVien");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CTPhieuBienNhanHs(CTPhieuBienNhanH entity)
		{
			this.SendPropertyChanging();
			entity.PhieuBienNhanH = this;
		}
		
		private void detach_CTPhieuBienNhanHs(CTPhieuBienNhanH entity)
		{
			this.SendPropertyChanging();
			entity.PhieuBienNhanH = null;
		}
	}
}
#pragma warning restore 1591
